// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Charge.proto

#include "Charge.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR ReqChargeInfo::ReqChargeInfo(
    ::_pbi::ConstantInitialized){}
struct ReqChargeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqChargeInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqChargeInfoDefaultTypeInternal() {}
  union {
    ReqChargeInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqChargeInfoDefaultTypeInternal _ReqChargeInfo_default_instance_;
PROTOBUF_CONSTEXPR ChargeData::ChargeData(
    ::_pbi::ConstantInitialized)
  : chargeid_(0)
  , status_(0){}
struct ChargeDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChargeDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChargeDataDefaultTypeInternal() {}
  union {
    ChargeData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChargeDataDefaultTypeInternal _ChargeData_default_instance_;
PROTOBUF_CONSTEXPR ResChargeInfo::ResChargeInfo(
    ::_pbi::ConstantInitialized)
  : data_(){}
struct ResChargeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResChargeInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResChargeInfoDefaultTypeInternal() {}
  union {
    ResChargeInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResChargeInfoDefaultTypeInternal _ResChargeInfo_default_instance_;
PROTOBUF_CONSTEXPR NotifyRetCharge::NotifyRetCharge(
    ::_pbi::ConstantInitialized)
  : chargeid_(0){}
struct NotifyRetChargeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyRetChargeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyRetChargeDefaultTypeInternal() {}
  union {
    NotifyRetCharge _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyRetChargeDefaultTypeInternal _NotifyRetCharge_default_instance_;
PROTOBUF_CONSTEXPR ReqStartCharge::ReqStartCharge(
    ::_pbi::ConstantInitialized)
  : extra_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , chargeid_(0)
  , money_(0){}
struct ReqStartChargeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqStartChargeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqStartChargeDefaultTypeInternal() {}
  union {
    ReqStartCharge _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqStartChargeDefaultTypeInternal _ReqStartCharge_default_instance_;
static ::_pb::Metadata file_level_metadata_Charge_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Charge_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Charge_2eproto = nullptr;

const uint32_t TableStruct_Charge_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqChargeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChargeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ChargeData, chargeid_),
  PROTOBUF_FIELD_OFFSET(::ChargeData, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResChargeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResChargeInfo, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NotifyRetCharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NotifyRetCharge, chargeid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqStartCharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqStartCharge, chargeid_),
  PROTOBUF_FIELD_OFFSET(::ReqStartCharge, money_),
  PROTOBUF_FIELD_OFFSET(::ReqStartCharge, extra_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ReqChargeInfo)},
  { 6, -1, -1, sizeof(::ChargeData)},
  { 14, -1, -1, sizeof(::ResChargeInfo)},
  { 21, -1, -1, sizeof(::NotifyRetCharge)},
  { 28, -1, -1, sizeof(::ReqStartCharge)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_ReqChargeInfo_default_instance_._instance,
  &::_ChargeData_default_instance_._instance,
  &::_ResChargeInfo_default_instance_._instance,
  &::_NotifyRetCharge_default_instance_._instance,
  &::_ReqStartCharge_default_instance_._instance,
};

const char descriptor_table_protodef_Charge_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014Charge.proto\"\017\n\rReqChargeInfo\".\n\nCharg"
  "eData\022\020\n\010chargeId\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\""
  "*\n\rResChargeInfo\022\031\n\004data\030\001 \003(\0132\013.ChargeD"
  "ata\"#\n\017NotifyRetCharge\022\020\n\010chargeId\030\001 \001(\005"
  "\"@\n\016ReqStartCharge\022\020\n\010chargeId\030\001 \001(\005\022\r\n\005"
  "money\030\002 \001(\005\022\r\n\005extra\030\003 \001(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Charge_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Charge_2eproto = {
    false, false, 234, descriptor_table_protodef_Charge_2eproto,
    "Charge.proto",
    &descriptor_table_Charge_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_Charge_2eproto::offsets,
    file_level_metadata_Charge_2eproto, file_level_enum_descriptors_Charge_2eproto,
    file_level_service_descriptors_Charge_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Charge_2eproto_getter() {
  return &descriptor_table_Charge_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Charge_2eproto(&descriptor_table_Charge_2eproto);

// ===================================================================

class ReqChargeInfo::_Internal {
 public:
};

ReqChargeInfo::ReqChargeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ReqChargeInfo)
}
ReqChargeInfo::ReqChargeInfo(const ReqChargeInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ReqChargeInfo)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqChargeInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqChargeInfo::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReqChargeInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Charge_2eproto_getter, &descriptor_table_Charge_2eproto_once,
      file_level_metadata_Charge_2eproto[0]);
}

// ===================================================================

class ChargeData::_Internal {
 public:
};

ChargeData::ChargeData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ChargeData)
}
ChargeData::ChargeData(const ChargeData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&chargeid_, &from.chargeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&chargeid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:ChargeData)
}

inline void ChargeData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&chargeid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&chargeid_)) + sizeof(status_));
}

ChargeData::~ChargeData() {
  // @@protoc_insertion_point(destructor:ChargeData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChargeData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ChargeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChargeData::Clear() {
// @@protoc_insertion_point(message_clear_start:ChargeData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&chargeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&chargeid_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChargeData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 chargeId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          chargeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChargeData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChargeData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chargeId = 1;
  if (this->_internal_chargeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_chargeid(), target);
  }

  // int32 status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChargeData)
  return target;
}

size_t ChargeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChargeData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chargeId = 1;
  if (this->_internal_chargeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_chargeid());
  }

  // int32 status = 2;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChargeData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ChargeData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChargeData::GetClassData() const { return &_class_data_; }

void ChargeData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ChargeData *>(to)->MergeFrom(
      static_cast<const ChargeData &>(from));
}


void ChargeData::MergeFrom(const ChargeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChargeData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_chargeid() != 0) {
    _internal_set_chargeid(from._internal_chargeid());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChargeData::CopyFrom(const ChargeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChargeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChargeData::IsInitialized() const {
  return true;
}

void ChargeData::InternalSwap(ChargeData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChargeData, status_)
      + sizeof(ChargeData::status_)
      - PROTOBUF_FIELD_OFFSET(ChargeData, chargeid_)>(
          reinterpret_cast<char*>(&chargeid_),
          reinterpret_cast<char*>(&other->chargeid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChargeData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Charge_2eproto_getter, &descriptor_table_Charge_2eproto_once,
      file_level_metadata_Charge_2eproto[1]);
}

// ===================================================================

class ResChargeInfo::_Internal {
 public:
};

ResChargeInfo::ResChargeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResChargeInfo)
}
ResChargeInfo::ResChargeInfo(const ResChargeInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResChargeInfo)
}

inline void ResChargeInfo::SharedCtor() {
}

ResChargeInfo::~ResChargeInfo() {
  // @@protoc_insertion_point(destructor:ResChargeInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResChargeInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResChargeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResChargeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ResChargeInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResChargeInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ChargeData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResChargeInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResChargeInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChargeData data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResChargeInfo)
  return target;
}

size_t ResChargeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResChargeInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ChargeData data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResChargeInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResChargeInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResChargeInfo::GetClassData() const { return &_class_data_; }

void ResChargeInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResChargeInfo *>(to)->MergeFrom(
      static_cast<const ResChargeInfo &>(from));
}


void ResChargeInfo::MergeFrom(const ResChargeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResChargeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResChargeInfo::CopyFrom(const ResChargeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResChargeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResChargeInfo::IsInitialized() const {
  return true;
}

void ResChargeInfo::InternalSwap(ResChargeInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResChargeInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Charge_2eproto_getter, &descriptor_table_Charge_2eproto_once,
      file_level_metadata_Charge_2eproto[2]);
}

// ===================================================================

class NotifyRetCharge::_Internal {
 public:
};

NotifyRetCharge::NotifyRetCharge(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:NotifyRetCharge)
}
NotifyRetCharge::NotifyRetCharge(const NotifyRetCharge& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chargeid_ = from.chargeid_;
  // @@protoc_insertion_point(copy_constructor:NotifyRetCharge)
}

inline void NotifyRetCharge::SharedCtor() {
chargeid_ = 0;
}

NotifyRetCharge::~NotifyRetCharge() {
  // @@protoc_insertion_point(destructor:NotifyRetCharge)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyRetCharge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyRetCharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyRetCharge::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyRetCharge)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chargeid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyRetCharge::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 chargeId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          chargeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyRetCharge::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NotifyRetCharge)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chargeId = 1;
  if (this->_internal_chargeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_chargeid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyRetCharge)
  return target;
}

size_t NotifyRetCharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyRetCharge)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chargeId = 1;
  if (this->_internal_chargeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_chargeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyRetCharge::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyRetCharge::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyRetCharge::GetClassData() const { return &_class_data_; }

void NotifyRetCharge::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyRetCharge *>(to)->MergeFrom(
      static_cast<const NotifyRetCharge &>(from));
}


void NotifyRetCharge::MergeFrom(const NotifyRetCharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyRetCharge)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_chargeid() != 0) {
    _internal_set_chargeid(from._internal_chargeid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyRetCharge::CopyFrom(const NotifyRetCharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyRetCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRetCharge::IsInitialized() const {
  return true;
}

void NotifyRetCharge::InternalSwap(NotifyRetCharge* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(chargeid_, other->chargeid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyRetCharge::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Charge_2eproto_getter, &descriptor_table_Charge_2eproto_once,
      file_level_metadata_Charge_2eproto[3]);
}

// ===================================================================

class ReqStartCharge::_Internal {
 public:
};

ReqStartCharge::ReqStartCharge(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqStartCharge)
}
ReqStartCharge::ReqStartCharge(const ReqStartCharge& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extra_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    extra_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_extra().empty()) {
    extra_.Set(from._internal_extra(), 
      GetArenaForAllocation());
  }
  ::memcpy(&chargeid_, &from.chargeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&chargeid_)) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:ReqStartCharge)
}

inline void ReqStartCharge::SharedCtor() {
extra_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  extra_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&chargeid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&chargeid_)) + sizeof(money_));
}

ReqStartCharge::~ReqStartCharge() {
  // @@protoc_insertion_point(destructor:ReqStartCharge)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqStartCharge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  extra_.Destroy();
}

void ReqStartCharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqStartCharge::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqStartCharge)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extra_.ClearToEmpty();
  ::memset(&chargeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&chargeid_)) + sizeof(money_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqStartCharge::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 chargeId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          chargeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 money = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          money_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string extra = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_extra();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ReqStartCharge.extra"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqStartCharge::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqStartCharge)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chargeId = 1;
  if (this->_internal_chargeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_chargeid(), target);
  }

  // int32 money = 2;
  if (this->_internal_money() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_money(), target);
  }

  // string extra = 3;
  if (!this->_internal_extra().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_extra().data(), static_cast<int>(this->_internal_extra().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReqStartCharge.extra");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_extra(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqStartCharge)
  return target;
}

size_t ReqStartCharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqStartCharge)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string extra = 3;
  if (!this->_internal_extra().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_extra());
  }

  // int32 chargeId = 1;
  if (this->_internal_chargeid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_chargeid());
  }

  // int32 money = 2;
  if (this->_internal_money() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_money());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqStartCharge::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqStartCharge::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqStartCharge::GetClassData() const { return &_class_data_; }

void ReqStartCharge::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqStartCharge *>(to)->MergeFrom(
      static_cast<const ReqStartCharge &>(from));
}


void ReqStartCharge::MergeFrom(const ReqStartCharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqStartCharge)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_extra().empty()) {
    _internal_set_extra(from._internal_extra());
  }
  if (from._internal_chargeid() != 0) {
    _internal_set_chargeid(from._internal_chargeid());
  }
  if (from._internal_money() != 0) {
    _internal_set_money(from._internal_money());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqStartCharge::CopyFrom(const ReqStartCharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqStartCharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqStartCharge::IsInitialized() const {
  return true;
}

void ReqStartCharge::InternalSwap(ReqStartCharge* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &extra_, lhs_arena,
      &other->extra_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqStartCharge, money_)
      + sizeof(ReqStartCharge::money_)
      - PROTOBUF_FIELD_OFFSET(ReqStartCharge, chargeid_)>(
          reinterpret_cast<char*>(&chargeid_),
          reinterpret_cast<char*>(&other->chargeid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqStartCharge::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Charge_2eproto_getter, &descriptor_table_Charge_2eproto_once,
      file_level_metadata_Charge_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ReqChargeInfo*
Arena::CreateMaybeMessage< ::ReqChargeInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqChargeInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ChargeData*
Arena::CreateMaybeMessage< ::ChargeData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChargeData >(arena);
}
template<> PROTOBUF_NOINLINE ::ResChargeInfo*
Arena::CreateMaybeMessage< ::ResChargeInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResChargeInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::NotifyRetCharge*
Arena::CreateMaybeMessage< ::NotifyRetCharge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NotifyRetCharge >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqStartCharge*
Arena::CreateMaybeMessage< ::ReqStartCharge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqStartCharge >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
