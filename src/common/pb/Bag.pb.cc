// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Bag.proto

#include "Bag.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR itemAttrInfo::itemAttrInfo(
    ::_pbi::ConstantInitialized)
  : type_(0)
  , value_(0){}
struct itemAttrInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR itemAttrInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~itemAttrInfoDefaultTypeInternal() {}
  union {
    itemAttrInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 itemAttrInfoDefaultTypeInternal _itemAttrInfo_default_instance_;
PROTOBUF_CONSTEXPR EquipInfo::EquipInfo(
    ::_pbi::ConstantInitialized)
  : attrs_()
  , owner_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , level_(0)
  , exp_(0)
  , quality_(0)
  , islock_(0)
  , ownertype_(0)
  , idx_(0){}
struct EquipInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipInfoDefaultTypeInternal() {}
  union {
    EquipInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipInfoDefaultTypeInternal _EquipInfo_default_instance_;
PROTOBUF_CONSTEXPR ItemInfo::ItemInfo(
    ::_pbi::ConstantInitialized)
  : count_(uint64_t{0u})
  , id_(0)
  , type_(0)
  , opt_(0){}
struct ItemInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemInfoDefaultTypeInternal() {}
  union {
    ItemInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemInfoDefaultTypeInternal _ItemInfo_default_instance_;
PROTOBUF_CONSTEXPR BagInfo::BagInfo(
    ::_pbi::ConstantInitialized)
  : uid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , item_(nullptr)
  , equip_(nullptr){}
struct BagInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BagInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BagInfoDefaultTypeInternal() {}
  union {
    BagInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BagInfoDefaultTypeInternal _BagInfo_default_instance_;
PROTOBUF_CONSTEXPR ReqAllBagInfo::ReqAllBagInfo(
    ::_pbi::ConstantInitialized){}
struct ReqAllBagInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqAllBagInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqAllBagInfoDefaultTypeInternal() {}
  union {
    ReqAllBagInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqAllBagInfoDefaultTypeInternal _ReqAllBagInfo_default_instance_;
PROTOBUF_CONSTEXPR ResAllBagInfo::ResAllBagInfo(
    ::_pbi::ConstantInitialized)
  : bag_(){}
struct ResAllBagInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResAllBagInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResAllBagInfoDefaultTypeInternal() {}
  union {
    ResAllBagInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResAllBagInfoDefaultTypeInternal _ResAllBagInfo_default_instance_;
PROTOBUF_CONSTEXPR NotifyBagInfoSignUp::NotifyBagInfoSignUp(
    ::_pbi::ConstantInitialized)
  : bag_(){}
struct NotifyBagInfoSignUpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyBagInfoSignUpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyBagInfoSignUpDefaultTypeInternal() {}
  union {
    NotifyBagInfoSignUp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyBagInfoSignUpDefaultTypeInternal _NotifyBagInfoSignUp_default_instance_;
PROTOBUF_CONSTEXPR NotifyDeleteItem::NotifyDeleteItem(
    ::_pbi::ConstantInitialized)
  : bag_(){}
struct NotifyDeleteItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyDeleteItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyDeleteItemDefaultTypeInternal() {}
  union {
    NotifyDeleteItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyDeleteItemDefaultTypeInternal _NotifyDeleteItem_default_instance_;
PROTOBUF_CONSTEXPR CurrencyInfo::CurrencyInfo(
    ::_pbi::ConstantInitialized)
  : value_(uint64_t{0u})
  , id_(0){}
struct CurrencyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CurrencyInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CurrencyInfoDefaultTypeInternal() {}
  union {
    CurrencyInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CurrencyInfoDefaultTypeInternal _CurrencyInfo_default_instance_;
PROTOBUF_CONSTEXPR ReqCurrencyInfo::ReqCurrencyInfo(
    ::_pbi::ConstantInitialized){}
struct ReqCurrencyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqCurrencyInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqCurrencyInfoDefaultTypeInternal() {}
  union {
    ReqCurrencyInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqCurrencyInfoDefaultTypeInternal _ReqCurrencyInfo_default_instance_;
PROTOBUF_CONSTEXPR ResCurrencyInfo::ResCurrencyInfo(
    ::_pbi::ConstantInitialized)
  : currency_(){}
struct ResCurrencyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResCurrencyInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResCurrencyInfoDefaultTypeInternal() {}
  union {
    ResCurrencyInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResCurrencyInfoDefaultTypeInternal _ResCurrencyInfo_default_instance_;
PROTOBUF_CONSTEXPR NotifyCurrencyUpdate::NotifyCurrencyUpdate(
    ::_pbi::ConstantInitialized)
  : currency_(){}
struct NotifyCurrencyUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyCurrencyUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyCurrencyUpdateDefaultTypeInternal() {}
  union {
    NotifyCurrencyUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyCurrencyUpdateDefaultTypeInternal _NotifyCurrencyUpdate_default_instance_;
PROTOBUF_CONSTEXPR NotifyDeleteCurrency::NotifyDeleteCurrency(
    ::_pbi::ConstantInitialized)
  : currency_()
  , _currency_cached_byte_size_(0){}
struct NotifyDeleteCurrencyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyDeleteCurrencyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyDeleteCurrencyDefaultTypeInternal() {}
  union {
    NotifyDeleteCurrency _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyDeleteCurrencyDefaultTypeInternal _NotifyDeleteCurrency_default_instance_;
PROTOBUF_CONSTEXPR NotifyClientRewardTips::NotifyClientRewardTips(
    ::_pbi::ConstantInitialized)
  : data_()
  , rdtype_(0u)
  , param1_(0u)
  , param2_(0u)
  , param3_(0)
  , param4_(uint64_t{0u})
  , param5_(uint64_t{0u})
  , param6_(int64_t{0}){}
struct NotifyClientRewardTipsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyClientRewardTipsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyClientRewardTipsDefaultTypeInternal() {}
  union {
    NotifyClientRewardTips _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyClientRewardTipsDefaultTypeInternal _NotifyClientRewardTips_default_instance_;
PROTOBUF_CONSTEXPR ReqBagItemLock::ReqBagItemLock(
    ::_pbi::ConstantInitialized)
  : uid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , islock_(0){}
struct ReqBagItemLockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqBagItemLockDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqBagItemLockDefaultTypeInternal() {}
  union {
    ReqBagItemLock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqBagItemLockDefaultTypeInternal _ReqBagItemLock_default_instance_;
PROTOBUF_CONSTEXPR ResBagItemLock::ResBagItemLock(
    ::_pbi::ConstantInitialized)
  : uid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , islock_(0){}
struct ResBagItemLockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResBagItemLockDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResBagItemLockDefaultTypeInternal() {}
  union {
    ResBagItemLock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResBagItemLockDefaultTypeInternal _ResBagItemLock_default_instance_;
PROTOBUF_CONSTEXPR ReqBagDelItem::ReqBagDelItem(
    ::_pbi::ConstantInitialized)
  : uid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ReqBagDelItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqBagDelItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqBagDelItemDefaultTypeInternal() {}
  union {
    ReqBagDelItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqBagDelItemDefaultTypeInternal _ReqBagDelItem_default_instance_;
PROTOBUF_CONSTEXPR ReqEquipLevelUp::ReqEquipLevelUp(
    ::_pbi::ConstantInitialized)
  : itemlist_()
  , uids_()
  , uid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , heroid_(0){}
struct ReqEquipLevelUpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqEquipLevelUpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqEquipLevelUpDefaultTypeInternal() {}
  union {
    ReqEquipLevelUp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqEquipLevelUpDefaultTypeInternal _ReqEquipLevelUp_default_instance_;
PROTOBUF_CONSTEXPR ResEquipLevelUp::ResEquipLevelUp(
    ::_pbi::ConstantInitialized)
  : attrs_()
  , guid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , level_(0)
  , exp_(0)
  , heroid_(0){}
struct ResEquipLevelUpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResEquipLevelUpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResEquipLevelUpDefaultTypeInternal() {}
  union {
    ResEquipLevelUp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResEquipLevelUpDefaultTypeInternal _ResEquipLevelUp_default_instance_;
PROTOBUF_CONSTEXPR ReqUseItem::ReqUseItem(
    ::_pbi::ConstantInitialized)
  : id_(0)
  , cnt_(0){}
struct ReqUseItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqUseItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqUseItemDefaultTypeInternal() {}
  union {
    ReqUseItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqUseItemDefaultTypeInternal _ReqUseItem_default_instance_;
static ::_pb::Metadata file_level_metadata_Bag_2eproto[20];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Bag_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Bag_2eproto = nullptr;

const uint32_t TableStruct_Bag_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::itemAttrInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::itemAttrInfo, type_),
  PROTOBUF_FIELD_OFFSET(::itemAttrInfo, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EquipInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::EquipInfo, level_),
  PROTOBUF_FIELD_OFFSET(::EquipInfo, exp_),
  PROTOBUF_FIELD_OFFSET(::EquipInfo, attrs_),
  PROTOBUF_FIELD_OFFSET(::EquipInfo, quality_),
  PROTOBUF_FIELD_OFFSET(::EquipInfo, islock_),
  PROTOBUF_FIELD_OFFSET(::EquipInfo, owner_),
  PROTOBUF_FIELD_OFFSET(::EquipInfo, ownertype_),
  PROTOBUF_FIELD_OFFSET(::EquipInfo, idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ItemInfo, id_),
  PROTOBUF_FIELD_OFFSET(::ItemInfo, count_),
  PROTOBUF_FIELD_OFFSET(::ItemInfo, type_),
  PROTOBUF_FIELD_OFFSET(::ItemInfo, opt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BagInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::BagInfo, uid_),
  PROTOBUF_FIELD_OFFSET(::BagInfo, item_),
  PROTOBUF_FIELD_OFFSET(::BagInfo, equip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqAllBagInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResAllBagInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResAllBagInfo, bag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NotifyBagInfoSignUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NotifyBagInfoSignUp, bag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NotifyDeleteItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NotifyDeleteItem, bag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CurrencyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CurrencyInfo, id_),
  PROTOBUF_FIELD_OFFSET(::CurrencyInfo, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqCurrencyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResCurrencyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResCurrencyInfo, currency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NotifyCurrencyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NotifyCurrencyUpdate, currency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NotifyDeleteCurrency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NotifyDeleteCurrency, currency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, data_),
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, rdtype_),
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, param1_),
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, param2_),
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, param3_),
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, param4_),
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, param5_),
  PROTOBUF_FIELD_OFFSET(::NotifyClientRewardTips, param6_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqBagItemLock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqBagItemLock, uid_),
  PROTOBUF_FIELD_OFFSET(::ReqBagItemLock, islock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResBagItemLock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResBagItemLock, uid_),
  PROTOBUF_FIELD_OFFSET(::ResBagItemLock, islock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqBagDelItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqBagDelItem, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqEquipLevelUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqEquipLevelUp, uid_),
  PROTOBUF_FIELD_OFFSET(::ReqEquipLevelUp, itemlist_),
  PROTOBUF_FIELD_OFFSET(::ReqEquipLevelUp, uids_),
  PROTOBUF_FIELD_OFFSET(::ReqEquipLevelUp, heroid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResEquipLevelUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResEquipLevelUp, guid_),
  PROTOBUF_FIELD_OFFSET(::ResEquipLevelUp, level_),
  PROTOBUF_FIELD_OFFSET(::ResEquipLevelUp, exp_),
  PROTOBUF_FIELD_OFFSET(::ResEquipLevelUp, heroid_),
  PROTOBUF_FIELD_OFFSET(::ResEquipLevelUp, attrs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqUseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqUseItem, id_),
  PROTOBUF_FIELD_OFFSET(::ReqUseItem, cnt_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::itemAttrInfo)},
  { 8, -1, -1, sizeof(::EquipInfo)},
  { 22, -1, -1, sizeof(::ItemInfo)},
  { 32, -1, -1, sizeof(::BagInfo)},
  { 41, -1, -1, sizeof(::ReqAllBagInfo)},
  { 47, -1, -1, sizeof(::ResAllBagInfo)},
  { 54, -1, -1, sizeof(::NotifyBagInfoSignUp)},
  { 61, -1, -1, sizeof(::NotifyDeleteItem)},
  { 68, -1, -1, sizeof(::CurrencyInfo)},
  { 76, -1, -1, sizeof(::ReqCurrencyInfo)},
  { 82, -1, -1, sizeof(::ResCurrencyInfo)},
  { 89, -1, -1, sizeof(::NotifyCurrencyUpdate)},
  { 96, -1, -1, sizeof(::NotifyDeleteCurrency)},
  { 103, -1, -1, sizeof(::NotifyClientRewardTips)},
  { 117, -1, -1, sizeof(::ReqBagItemLock)},
  { 125, -1, -1, sizeof(::ResBagItemLock)},
  { 133, -1, -1, sizeof(::ReqBagDelItem)},
  { 140, -1, -1, sizeof(::ReqEquipLevelUp)},
  { 150, -1, -1, sizeof(::ResEquipLevelUp)},
  { 161, -1, -1, sizeof(::ReqUseItem)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_itemAttrInfo_default_instance_._instance,
  &::_EquipInfo_default_instance_._instance,
  &::_ItemInfo_default_instance_._instance,
  &::_BagInfo_default_instance_._instance,
  &::_ReqAllBagInfo_default_instance_._instance,
  &::_ResAllBagInfo_default_instance_._instance,
  &::_NotifyBagInfoSignUp_default_instance_._instance,
  &::_NotifyDeleteItem_default_instance_._instance,
  &::_CurrencyInfo_default_instance_._instance,
  &::_ReqCurrencyInfo_default_instance_._instance,
  &::_ResCurrencyInfo_default_instance_._instance,
  &::_NotifyCurrencyUpdate_default_instance_._instance,
  &::_NotifyDeleteCurrency_default_instance_._instance,
  &::_NotifyClientRewardTips_default_instance_._instance,
  &::_ReqBagItemLock_default_instance_._instance,
  &::_ResBagItemLock_default_instance_._instance,
  &::_ReqBagDelItem_default_instance_._instance,
  &::_ReqEquipLevelUp_default_instance_._instance,
  &::_ResEquipLevelUp_default_instance_._instance,
  &::_ReqUseItem_default_instance_._instance,
};

const char descriptor_table_protodef_Bag_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tBag.proto\"+\n\014itemAttrInfo\022\014\n\004type\030\001 \001("
  "\005\022\r\n\005value\030\002 \001(\005\"\225\001\n\tEquipInfo\022\r\n\005level\030"
  "\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022\034\n\005attrs\030\003 \003(\0132\r.item"
  "AttrInfo\022\017\n\007quality\030\004 \001(\005\022\016\n\006isLock\030\005 \001("
  "\005\022\r\n\005owner\030\006 \001(\t\022\021\n\townerType\030\007 \001(\005\022\013\n\003i"
  "dx\030\010 \001(\005\"@\n\010ItemInfo\022\n\n\002id\030\001 \001(\005\022\r\n\005coun"
  "t\030\002 \001(\004\022\014\n\004type\030\003 \001(\005\022\013\n\003opt\030\004 \001(\005\"J\n\007Ba"
  "gInfo\022\013\n\003uid\030\001 \001(\t\022\027\n\004item\030\002 \001(\0132\t.ItemI"
  "nfo\022\031\n\005equip\030\003 \001(\0132\n.EquipInfo\"\017\n\rReqAll"
  "BagInfo\"&\n\rResAllBagInfo\022\025\n\003bag\030\001 \003(\0132\010."
  "BagInfo\",\n\023NotifyBagInfoSignUp\022\025\n\003bag\030\001 "
  "\003(\0132\010.BagInfo\"\037\n\020NotifyDeleteItem\022\013\n\003bag"
  "\030\001 \003(\t\")\n\014CurrencyInfo\022\n\n\002id\030\001 \001(\005\022\r\n\005va"
  "lue\030\002 \001(\004\"\021\n\017ReqCurrencyInfo\"2\n\017ResCurre"
  "ncyInfo\022\037\n\010currency\030\001 \003(\0132\r.CurrencyInfo"
  "\"7\n\024NotifyCurrencyUpdate\022\037\n\010currency\030\001 \003"
  "(\0132\r.CurrencyInfo\"(\n\024NotifyDeleteCurrenc"
  "y\022\020\n\010currency\030\001 \003(\005\"\241\001\n\026NotifyClientRewa"
  "rdTips\022\027\n\004data\030\001 \003(\0132\t.ItemInfo\022\016\n\006rdTyp"
  "e\030\002 \001(\r\022\016\n\006param1\030\003 \001(\r\022\016\n\006param2\030\004 \001(\r\022"
  "\016\n\006param3\030\005 \001(\021\022\016\n\006param4\030\006 \001(\004\022\016\n\006param"
  "5\030\007 \001(\004\022\016\n\006param6\030\010 \001(\022\"-\n\016ReqBagItemLoc"
  "k\022\013\n\003uid\030\001 \001(\t\022\016\n\006isLock\030\002 \001(\005\"-\n\016ResBag"
  "ItemLock\022\013\n\003uid\030\001 \001(\t\022\016\n\006isLock\030\002 \001(\005\"\034\n"
  "\rReqBagDelItem\022\013\n\003uid\030\001 \001(\t\"Y\n\017ReqEquipL"
  "evelUp\022\013\n\003uid\030\001 \001(\t\022\033\n\010itemlist\030\002 \003(\0132\t."
  "ItemInfo\022\014\n\004uids\030\003 \003(\t\022\016\n\006heroId\030\004 \001(\005\"i"
  "\n\017ResEquipLevelUp\022\014\n\004guid\030\001 \001(\t\022\r\n\005level"
  "\030\002 \001(\005\022\013\n\003exp\030\003 \001(\005\022\016\n\006heroId\030\004 \001(\005\022\034\n\005a"
  "ttrs\030\005 \003(\0132\r.itemAttrInfo\"%\n\nReqUseItem\022"
  "\n\n\002id\030\001 \001(\005\022\013\n\003cnt\030\002 \001(\005b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Bag_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Bag_2eproto = {
    false, false, 1232, descriptor_table_protodef_Bag_2eproto,
    "Bag.proto",
    &descriptor_table_Bag_2eproto_once, nullptr, 0, 20,
    schemas, file_default_instances, TableStruct_Bag_2eproto::offsets,
    file_level_metadata_Bag_2eproto, file_level_enum_descriptors_Bag_2eproto,
    file_level_service_descriptors_Bag_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Bag_2eproto_getter() {
  return &descriptor_table_Bag_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Bag_2eproto(&descriptor_table_Bag_2eproto);

// ===================================================================

class itemAttrInfo::_Internal {
 public:
};

itemAttrInfo::itemAttrInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:itemAttrInfo)
}
itemAttrInfo::itemAttrInfo(const itemAttrInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&type_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:itemAttrInfo)
}

inline void itemAttrInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&type_)) + sizeof(value_));
}

itemAttrInfo::~itemAttrInfo() {
  // @@protoc_insertion_point(destructor:itemAttrInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void itemAttrInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void itemAttrInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void itemAttrInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:itemAttrInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&type_)) + sizeof(value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* itemAttrInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* itemAttrInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:itemAttrInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // int32 value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:itemAttrInfo)
  return target;
}

size_t itemAttrInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:itemAttrInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  // int32 value = 2;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData itemAttrInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    itemAttrInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*itemAttrInfo::GetClassData() const { return &_class_data_; }

void itemAttrInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<itemAttrInfo *>(to)->MergeFrom(
      static_cast<const itemAttrInfo &>(from));
}


void itemAttrInfo::MergeFrom(const itemAttrInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:itemAttrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void itemAttrInfo::CopyFrom(const itemAttrInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:itemAttrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool itemAttrInfo::IsInitialized() const {
  return true;
}

void itemAttrInfo::InternalSwap(itemAttrInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(itemAttrInfo, value_)
      + sizeof(itemAttrInfo::value_)
      - PROTOBUF_FIELD_OFFSET(itemAttrInfo, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata itemAttrInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[0]);
}

// ===================================================================

class EquipInfo::_Internal {
 public:
};

EquipInfo::EquipInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  attrs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:EquipInfo)
}
EquipInfo::EquipInfo(const EquipInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      attrs_(from.attrs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    owner_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_owner().empty()) {
    owner_.Set(from._internal_owner(), 
      GetArenaForAllocation());
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&idx_) -
    reinterpret_cast<char*>(&level_)) + sizeof(idx_));
  // @@protoc_insertion_point(copy_constructor:EquipInfo)
}

inline void EquipInfo::SharedCtor() {
owner_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  owner_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&level_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&idx_) -
    reinterpret_cast<char*>(&level_)) + sizeof(idx_));
}

EquipInfo::~EquipInfo() {
  // @@protoc_insertion_point(destructor:EquipInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EquipInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  owner_.Destroy();
}

void EquipInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EquipInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:EquipInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attrs_.Clear();
  owner_.ClearToEmpty();
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&level_)) + sizeof(idx_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 exp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .itemAttrInfo attrs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attrs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 quality = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          quality_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 isLock = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          islock_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string owner = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "EquipInfo.owner"));
        } else
          goto handle_unusual;
        continue;
      // int32 ownerType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          ownertype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 idx = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EquipInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EquipInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  // int32 exp = 2;
  if (this->_internal_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_exp(), target);
  }

  // repeated .itemAttrInfo attrs = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attrs_size()); i < n; i++) {
    const auto& repfield = this->_internal_attrs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 quality = 4;
  if (this->_internal_quality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_quality(), target);
  }

  // int32 isLock = 5;
  if (this->_internal_islock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_islock(), target);
  }

  // string owner = 6;
  if (!this->_internal_owner().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "EquipInfo.owner");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_owner(), target);
  }

  // int32 ownerType = 7;
  if (this->_internal_ownertype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_ownertype(), target);
  }

  // int32 idx = 8;
  if (this->_internal_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EquipInfo)
  return target;
}

size_t EquipInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EquipInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .itemAttrInfo attrs = 3;
  total_size += 1UL * this->_internal_attrs_size();
  for (const auto& msg : this->attrs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string owner = 6;
  if (!this->_internal_owner().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  // int32 level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 exp = 2;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_exp());
  }

  // int32 quality = 4;
  if (this->_internal_quality() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_quality());
  }

  // int32 isLock = 5;
  if (this->_internal_islock() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_islock());
  }

  // int32 ownerType = 7;
  if (this->_internal_ownertype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ownertype());
  }

  // int32 idx = 8;
  if (this->_internal_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EquipInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EquipInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EquipInfo::GetClassData() const { return &_class_data_; }

void EquipInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EquipInfo *>(to)->MergeFrom(
      static_cast<const EquipInfo &>(from));
}


void EquipInfo::MergeFrom(const EquipInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EquipInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  attrs_.MergeFrom(from.attrs_);
  if (!from._internal_owner().empty()) {
    _internal_set_owner(from._internal_owner());
  }
  if (from._internal_level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from._internal_exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from._internal_quality() != 0) {
    _internal_set_quality(from._internal_quality());
  }
  if (from._internal_islock() != 0) {
    _internal_set_islock(from._internal_islock());
  }
  if (from._internal_ownertype() != 0) {
    _internal_set_ownertype(from._internal_ownertype());
  }
  if (from._internal_idx() != 0) {
    _internal_set_idx(from._internal_idx());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EquipInfo::CopyFrom(const EquipInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EquipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipInfo::IsInitialized() const {
  return true;
}

void EquipInfo::InternalSwap(EquipInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  attrs_.InternalSwap(&other->attrs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &owner_, lhs_arena,
      &other->owner_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EquipInfo, idx_)
      + sizeof(EquipInfo::idx_)
      - PROTOBUF_FIELD_OFFSET(EquipInfo, level_)>(
          reinterpret_cast<char*>(&level_),
          reinterpret_cast<char*>(&other->level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[1]);
}

// ===================================================================

class ItemInfo::_Internal {
 public:
};

ItemInfo::ItemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ItemInfo)
}
ItemInfo::ItemInfo(const ItemInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&opt_) -
    reinterpret_cast<char*>(&count_)) + sizeof(opt_));
  // @@protoc_insertion_point(copy_constructor:ItemInfo)
}

inline void ItemInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&opt_) -
    reinterpret_cast<char*>(&count_)) + sizeof(opt_));
}

ItemInfo::~ItemInfo() {
  // @@protoc_insertion_point(destructor:ItemInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ItemInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ItemInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opt_) -
      reinterpret_cast<char*>(&count_)) + sizeof(opt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 opt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          opt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ItemInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ItemInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_count(), target);
  }

  // int32 type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_type(), target);
  }

  // int32 opt = 4;
  if (this->_internal_opt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_opt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ItemInfo)
  return target;
}

size_t ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ItemInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 type = 3;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  // int32 opt = 4;
  if (this->_internal_opt() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_opt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ItemInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ItemInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ItemInfo::GetClassData() const { return &_class_data_; }

void ItemInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ItemInfo *>(to)->MergeFrom(
      static_cast<const ItemInfo &>(from));
}


void ItemInfo::MergeFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_opt() != 0) {
    _internal_set_opt(from._internal_opt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ItemInfo::CopyFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfo::IsInitialized() const {
  return true;
}

void ItemInfo::InternalSwap(ItemInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ItemInfo, opt_)
      + sizeof(ItemInfo::opt_)
      - PROTOBUF_FIELD_OFFSET(ItemInfo, count_)>(
          reinterpret_cast<char*>(&count_),
          reinterpret_cast<char*>(&other->count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[2]);
}

// ===================================================================

class BagInfo::_Internal {
 public:
  static const ::ItemInfo& item(const BagInfo* msg);
  static const ::EquipInfo& equip(const BagInfo* msg);
};

const ::ItemInfo&
BagInfo::_Internal::item(const BagInfo* msg) {
  return *msg->item_;
}
const ::EquipInfo&
BagInfo::_Internal::equip(const BagInfo* msg) {
  return *msg->equip_;
}
BagInfo::BagInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:BagInfo)
}
BagInfo::BagInfo(const BagInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(from._internal_uid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_item()) {
    item_ = new ::ItemInfo(*from.item_);
  } else {
    item_ = nullptr;
  }
  if (from._internal_has_equip()) {
    equip_ = new ::EquipInfo(*from.equip_);
  } else {
    equip_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BagInfo)
}

inline void BagInfo::SharedCtor() {
uid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&item_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&equip_) -
    reinterpret_cast<char*>(&item_)) + sizeof(equip_));
}

BagInfo::~BagInfo() {
  // @@protoc_insertion_point(destructor:BagInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BagInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uid_.Destroy();
  if (this != internal_default_instance()) delete item_;
  if (this != internal_default_instance()) delete equip_;
}

void BagInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BagInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:BagInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  if (GetArenaForAllocation() == nullptr && equip_ != nullptr) {
    delete equip_;
  }
  equip_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BagInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "BagInfo.uid"));
        } else
          goto handle_unusual;
        continue;
      // .ItemInfo item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .EquipInfo equip = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_equip(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BagInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BagInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "BagInfo.uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  // .ItemInfo item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // .EquipInfo equip = 3;
  if (this->_internal_has_equip()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::equip(this),
        _Internal::equip(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagInfo)
  return target;
}

size_t BagInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // .ItemInfo item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  // .EquipInfo equip = 3;
  if (this->_internal_has_equip()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *equip_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BagInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BagInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BagInfo::GetClassData() const { return &_class_data_; }

void BagInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BagInfo *>(to)->MergeFrom(
      static_cast<const BagInfo &>(from));
}


void BagInfo::MergeFrom(const BagInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_has_item()) {
    _internal_mutable_item()->::ItemInfo::MergeFrom(from._internal_item());
  }
  if (from._internal_has_equip()) {
    _internal_mutable_equip()->::EquipInfo::MergeFrom(from._internal_equip());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BagInfo::CopyFrom(const BagInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagInfo::IsInitialized() const {
  return true;
}

void BagInfo::InternalSwap(BagInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BagInfo, equip_)
      + sizeof(BagInfo::equip_)
      - PROTOBUF_FIELD_OFFSET(BagInfo, item_)>(
          reinterpret_cast<char*>(&item_),
          reinterpret_cast<char*>(&other->item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BagInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[3]);
}

// ===================================================================

class ReqAllBagInfo::_Internal {
 public:
};

ReqAllBagInfo::ReqAllBagInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ReqAllBagInfo)
}
ReqAllBagInfo::ReqAllBagInfo(const ReqAllBagInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ReqAllBagInfo)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqAllBagInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqAllBagInfo::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReqAllBagInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[4]);
}

// ===================================================================

class ResAllBagInfo::_Internal {
 public:
};

ResAllBagInfo::ResAllBagInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bag_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResAllBagInfo)
}
ResAllBagInfo::ResAllBagInfo(const ResAllBagInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bag_(from.bag_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResAllBagInfo)
}

inline void ResAllBagInfo::SharedCtor() {
}

ResAllBagInfo::~ResAllBagInfo() {
  // @@protoc_insertion_point(destructor:ResAllBagInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResAllBagInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResAllBagInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResAllBagInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ResAllBagInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bag_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResAllBagInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .BagInfo bag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResAllBagInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResAllBagInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BagInfo bag = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bag_size()); i < n; i++) {
    const auto& repfield = this->_internal_bag(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResAllBagInfo)
  return target;
}

size_t ResAllBagInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResAllBagInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .BagInfo bag = 1;
  total_size += 1UL * this->_internal_bag_size();
  for (const auto& msg : this->bag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResAllBagInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResAllBagInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResAllBagInfo::GetClassData() const { return &_class_data_; }

void ResAllBagInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResAllBagInfo *>(to)->MergeFrom(
      static_cast<const ResAllBagInfo &>(from));
}


void ResAllBagInfo::MergeFrom(const ResAllBagInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResAllBagInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bag_.MergeFrom(from.bag_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResAllBagInfo::CopyFrom(const ResAllBagInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResAllBagInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResAllBagInfo::IsInitialized() const {
  return true;
}

void ResAllBagInfo::InternalSwap(ResAllBagInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bag_.InternalSwap(&other->bag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResAllBagInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[5]);
}

// ===================================================================

class NotifyBagInfoSignUp::_Internal {
 public:
};

NotifyBagInfoSignUp::NotifyBagInfoSignUp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bag_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:NotifyBagInfoSignUp)
}
NotifyBagInfoSignUp::NotifyBagInfoSignUp(const NotifyBagInfoSignUp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bag_(from.bag_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NotifyBagInfoSignUp)
}

inline void NotifyBagInfoSignUp::SharedCtor() {
}

NotifyBagInfoSignUp::~NotifyBagInfoSignUp() {
  // @@protoc_insertion_point(destructor:NotifyBagInfoSignUp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyBagInfoSignUp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyBagInfoSignUp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyBagInfoSignUp::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyBagInfoSignUp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bag_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyBagInfoSignUp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .BagInfo bag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyBagInfoSignUp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NotifyBagInfoSignUp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BagInfo bag = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bag_size()); i < n; i++) {
    const auto& repfield = this->_internal_bag(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyBagInfoSignUp)
  return target;
}

size_t NotifyBagInfoSignUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyBagInfoSignUp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .BagInfo bag = 1;
  total_size += 1UL * this->_internal_bag_size();
  for (const auto& msg : this->bag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyBagInfoSignUp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyBagInfoSignUp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyBagInfoSignUp::GetClassData() const { return &_class_data_; }

void NotifyBagInfoSignUp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyBagInfoSignUp *>(to)->MergeFrom(
      static_cast<const NotifyBagInfoSignUp &>(from));
}


void NotifyBagInfoSignUp::MergeFrom(const NotifyBagInfoSignUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyBagInfoSignUp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bag_.MergeFrom(from.bag_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyBagInfoSignUp::CopyFrom(const NotifyBagInfoSignUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyBagInfoSignUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyBagInfoSignUp::IsInitialized() const {
  return true;
}

void NotifyBagInfoSignUp::InternalSwap(NotifyBagInfoSignUp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bag_.InternalSwap(&other->bag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyBagInfoSignUp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[6]);
}

// ===================================================================

class NotifyDeleteItem::_Internal {
 public:
};

NotifyDeleteItem::NotifyDeleteItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bag_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:NotifyDeleteItem)
}
NotifyDeleteItem::NotifyDeleteItem(const NotifyDeleteItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bag_(from.bag_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NotifyDeleteItem)
}

inline void NotifyDeleteItem::SharedCtor() {
}

NotifyDeleteItem::~NotifyDeleteItem() {
  // @@protoc_insertion_point(destructor:NotifyDeleteItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyDeleteItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyDeleteItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyDeleteItem::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyDeleteItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bag_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyDeleteItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string bag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bag();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "NotifyDeleteItem.bag"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyDeleteItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NotifyDeleteItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string bag = 1;
  for (int i = 0, n = this->_internal_bag_size(); i < n; i++) {
    const auto& s = this->_internal_bag(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "NotifyDeleteItem.bag");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyDeleteItem)
  return target;
}

size_t NotifyDeleteItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyDeleteItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string bag = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bag_.size());
  for (int i = 0, n = bag_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      bag_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyDeleteItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyDeleteItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyDeleteItem::GetClassData() const { return &_class_data_; }

void NotifyDeleteItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyDeleteItem *>(to)->MergeFrom(
      static_cast<const NotifyDeleteItem &>(from));
}


void NotifyDeleteItem::MergeFrom(const NotifyDeleteItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyDeleteItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bag_.MergeFrom(from.bag_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyDeleteItem::CopyFrom(const NotifyDeleteItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyDeleteItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyDeleteItem::IsInitialized() const {
  return true;
}

void NotifyDeleteItem::InternalSwap(NotifyDeleteItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bag_.InternalSwap(&other->bag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyDeleteItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[7]);
}

// ===================================================================

class CurrencyInfo::_Internal {
 public:
};

CurrencyInfo::CurrencyInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:CurrencyInfo)
}
CurrencyInfo::CurrencyInfo(const CurrencyInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&value_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:CurrencyInfo)
}

inline void CurrencyInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&value_)) + sizeof(id_));
}

CurrencyInfo::~CurrencyInfo() {
  // @@protoc_insertion_point(destructor:CurrencyInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CurrencyInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CurrencyInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CurrencyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CurrencyInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&value_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CurrencyInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CurrencyInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CurrencyInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // uint64 value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CurrencyInfo)
  return target;
}

size_t CurrencyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CurrencyInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 value = 2;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_value());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CurrencyInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CurrencyInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CurrencyInfo::GetClassData() const { return &_class_data_; }

void CurrencyInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CurrencyInfo *>(to)->MergeFrom(
      static_cast<const CurrencyInfo &>(from));
}


void CurrencyInfo::MergeFrom(const CurrencyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CurrencyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CurrencyInfo::CopyFrom(const CurrencyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CurrencyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyInfo::IsInitialized() const {
  return true;
}

void CurrencyInfo::InternalSwap(CurrencyInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CurrencyInfo, id_)
      + sizeof(CurrencyInfo::id_)
      - PROTOBUF_FIELD_OFFSET(CurrencyInfo, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CurrencyInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[8]);
}

// ===================================================================

class ReqCurrencyInfo::_Internal {
 public:
};

ReqCurrencyInfo::ReqCurrencyInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ReqCurrencyInfo)
}
ReqCurrencyInfo::ReqCurrencyInfo(const ReqCurrencyInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ReqCurrencyInfo)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqCurrencyInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqCurrencyInfo::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReqCurrencyInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[9]);
}

// ===================================================================

class ResCurrencyInfo::_Internal {
 public:
};

ResCurrencyInfo::ResCurrencyInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  currency_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResCurrencyInfo)
}
ResCurrencyInfo::ResCurrencyInfo(const ResCurrencyInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      currency_(from.currency_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResCurrencyInfo)
}

inline void ResCurrencyInfo::SharedCtor() {
}

ResCurrencyInfo::~ResCurrencyInfo() {
  // @@protoc_insertion_point(destructor:ResCurrencyInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResCurrencyInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResCurrencyInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResCurrencyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ResCurrencyInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResCurrencyInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CurrencyInfo currency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_currency(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResCurrencyInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResCurrencyInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CurrencyInfo currency = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_currency_size()); i < n; i++) {
    const auto& repfield = this->_internal_currency(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResCurrencyInfo)
  return target;
}

size_t ResCurrencyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResCurrencyInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CurrencyInfo currency = 1;
  total_size += 1UL * this->_internal_currency_size();
  for (const auto& msg : this->currency_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResCurrencyInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResCurrencyInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResCurrencyInfo::GetClassData() const { return &_class_data_; }

void ResCurrencyInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResCurrencyInfo *>(to)->MergeFrom(
      static_cast<const ResCurrencyInfo &>(from));
}


void ResCurrencyInfo::MergeFrom(const ResCurrencyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResCurrencyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  currency_.MergeFrom(from.currency_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResCurrencyInfo::CopyFrom(const ResCurrencyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResCurrencyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResCurrencyInfo::IsInitialized() const {
  return true;
}

void ResCurrencyInfo::InternalSwap(ResCurrencyInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  currency_.InternalSwap(&other->currency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResCurrencyInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[10]);
}

// ===================================================================

class NotifyCurrencyUpdate::_Internal {
 public:
};

NotifyCurrencyUpdate::NotifyCurrencyUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  currency_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:NotifyCurrencyUpdate)
}
NotifyCurrencyUpdate::NotifyCurrencyUpdate(const NotifyCurrencyUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      currency_(from.currency_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NotifyCurrencyUpdate)
}

inline void NotifyCurrencyUpdate::SharedCtor() {
}

NotifyCurrencyUpdate::~NotifyCurrencyUpdate() {
  // @@protoc_insertion_point(destructor:NotifyCurrencyUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyCurrencyUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyCurrencyUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyCurrencyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyCurrencyUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyCurrencyUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CurrencyInfo currency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_currency(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyCurrencyUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NotifyCurrencyUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CurrencyInfo currency = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_currency_size()); i < n; i++) {
    const auto& repfield = this->_internal_currency(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyCurrencyUpdate)
  return target;
}

size_t NotifyCurrencyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyCurrencyUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CurrencyInfo currency = 1;
  total_size += 1UL * this->_internal_currency_size();
  for (const auto& msg : this->currency_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyCurrencyUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyCurrencyUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyCurrencyUpdate::GetClassData() const { return &_class_data_; }

void NotifyCurrencyUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyCurrencyUpdate *>(to)->MergeFrom(
      static_cast<const NotifyCurrencyUpdate &>(from));
}


void NotifyCurrencyUpdate::MergeFrom(const NotifyCurrencyUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyCurrencyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  currency_.MergeFrom(from.currency_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyCurrencyUpdate::CopyFrom(const NotifyCurrencyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyCurrencyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyCurrencyUpdate::IsInitialized() const {
  return true;
}

void NotifyCurrencyUpdate::InternalSwap(NotifyCurrencyUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  currency_.InternalSwap(&other->currency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyCurrencyUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[11]);
}

// ===================================================================

class NotifyDeleteCurrency::_Internal {
 public:
};

NotifyDeleteCurrency::NotifyDeleteCurrency(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  currency_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:NotifyDeleteCurrency)
}
NotifyDeleteCurrency::NotifyDeleteCurrency(const NotifyDeleteCurrency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      currency_(from.currency_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NotifyDeleteCurrency)
}

inline void NotifyDeleteCurrency::SharedCtor() {
}

NotifyDeleteCurrency::~NotifyDeleteCurrency() {
  // @@protoc_insertion_point(destructor:NotifyDeleteCurrency)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyDeleteCurrency::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyDeleteCurrency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyDeleteCurrency::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyDeleteCurrency)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyDeleteCurrency::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 currency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_currency(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_currency(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyDeleteCurrency::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NotifyDeleteCurrency)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 currency = 1;
  {
    int byte_size = _currency_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_currency(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyDeleteCurrency)
  return target;
}

size_t NotifyDeleteCurrency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyDeleteCurrency)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 currency = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->currency_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _currency_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyDeleteCurrency::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyDeleteCurrency::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyDeleteCurrency::GetClassData() const { return &_class_data_; }

void NotifyDeleteCurrency::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyDeleteCurrency *>(to)->MergeFrom(
      static_cast<const NotifyDeleteCurrency &>(from));
}


void NotifyDeleteCurrency::MergeFrom(const NotifyDeleteCurrency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyDeleteCurrency)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  currency_.MergeFrom(from.currency_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyDeleteCurrency::CopyFrom(const NotifyDeleteCurrency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyDeleteCurrency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyDeleteCurrency::IsInitialized() const {
  return true;
}

void NotifyDeleteCurrency::InternalSwap(NotifyDeleteCurrency* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  currency_.InternalSwap(&other->currency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyDeleteCurrency::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[12]);
}

// ===================================================================

class NotifyClientRewardTips::_Internal {
 public:
};

NotifyClientRewardTips::NotifyClientRewardTips(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:NotifyClientRewardTips)
}
NotifyClientRewardTips::NotifyClientRewardTips(const NotifyClientRewardTips& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rdtype_, &from.rdtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&param6_) -
    reinterpret_cast<char*>(&rdtype_)) + sizeof(param6_));
  // @@protoc_insertion_point(copy_constructor:NotifyClientRewardTips)
}

inline void NotifyClientRewardTips::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&rdtype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&param6_) -
    reinterpret_cast<char*>(&rdtype_)) + sizeof(param6_));
}

NotifyClientRewardTips::~NotifyClientRewardTips() {
  // @@protoc_insertion_point(destructor:NotifyClientRewardTips)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyClientRewardTips::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyClientRewardTips::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyClientRewardTips::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyClientRewardTips)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  ::memset(&rdtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param6_) -
      reinterpret_cast<char*>(&rdtype_)) + sizeof(param6_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyClientRewardTips::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ItemInfo data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 rdType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rdtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 param1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 param2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          param2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 param3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          param3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 param4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          param4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 param5 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          param5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint64 param6 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          param6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyClientRewardTips::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NotifyClientRewardTips)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ItemInfo data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // uint32 rdType = 2;
  if (this->_internal_rdtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_rdtype(), target);
  }

  // uint32 param1 = 3;
  if (this->_internal_param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_param1(), target);
  }

  // uint32 param2 = 4;
  if (this->_internal_param2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_param2(), target);
  }

  // sint32 param3 = 5;
  if (this->_internal_param3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(5, this->_internal_param3(), target);
  }

  // uint64 param4 = 6;
  if (this->_internal_param4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_param4(), target);
  }

  // uint64 param5 = 7;
  if (this->_internal_param5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_param5(), target);
  }

  // sint64 param6 = 8;
  if (this->_internal_param6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(8, this->_internal_param6(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NotifyClientRewardTips)
  return target;
}

size_t NotifyClientRewardTips::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyClientRewardTips)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ItemInfo data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 rdType = 2;
  if (this->_internal_rdtype() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_rdtype());
  }

  // uint32 param1 = 3;
  if (this->_internal_param1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_param1());
  }

  // uint32 param2 = 4;
  if (this->_internal_param2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_param2());
  }

  // sint32 param3 = 5;
  if (this->_internal_param3() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_param3());
  }

  // uint64 param4 = 6;
  if (this->_internal_param4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_param4());
  }

  // uint64 param5 = 7;
  if (this->_internal_param5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_param5());
  }

  // sint64 param6 = 8;
  if (this->_internal_param6() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(this->_internal_param6());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyClientRewardTips::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyClientRewardTips::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyClientRewardTips::GetClassData() const { return &_class_data_; }

void NotifyClientRewardTips::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyClientRewardTips *>(to)->MergeFrom(
      static_cast<const NotifyClientRewardTips &>(from));
}


void NotifyClientRewardTips::MergeFrom(const NotifyClientRewardTips& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyClientRewardTips)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from._internal_rdtype() != 0) {
    _internal_set_rdtype(from._internal_rdtype());
  }
  if (from._internal_param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
  if (from._internal_param2() != 0) {
    _internal_set_param2(from._internal_param2());
  }
  if (from._internal_param3() != 0) {
    _internal_set_param3(from._internal_param3());
  }
  if (from._internal_param4() != 0) {
    _internal_set_param4(from._internal_param4());
  }
  if (from._internal_param5() != 0) {
    _internal_set_param5(from._internal_param5());
  }
  if (from._internal_param6() != 0) {
    _internal_set_param6(from._internal_param6());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyClientRewardTips::CopyFrom(const NotifyClientRewardTips& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyClientRewardTips)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyClientRewardTips::IsInitialized() const {
  return true;
}

void NotifyClientRewardTips::InternalSwap(NotifyClientRewardTips* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyClientRewardTips, param6_)
      + sizeof(NotifyClientRewardTips::param6_)
      - PROTOBUF_FIELD_OFFSET(NotifyClientRewardTips, rdtype_)>(
          reinterpret_cast<char*>(&rdtype_),
          reinterpret_cast<char*>(&other->rdtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyClientRewardTips::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[13]);
}

// ===================================================================

class ReqBagItemLock::_Internal {
 public:
};

ReqBagItemLock::ReqBagItemLock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqBagItemLock)
}
ReqBagItemLock::ReqBagItemLock(const ReqBagItemLock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(from._internal_uid(), 
      GetArenaForAllocation());
  }
  islock_ = from.islock_;
  // @@protoc_insertion_point(copy_constructor:ReqBagItemLock)
}

inline void ReqBagItemLock::SharedCtor() {
uid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
islock_ = 0;
}

ReqBagItemLock::~ReqBagItemLock() {
  // @@protoc_insertion_point(destructor:ReqBagItemLock)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqBagItemLock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uid_.Destroy();
}

void ReqBagItemLock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqBagItemLock::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqBagItemLock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmpty();
  islock_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqBagItemLock::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ReqBagItemLock.uid"));
        } else
          goto handle_unusual;
        continue;
      // int32 isLock = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          islock_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqBagItemLock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqBagItemLock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReqBagItemLock.uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  // int32 isLock = 2;
  if (this->_internal_islock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_islock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqBagItemLock)
  return target;
}

size_t ReqBagItemLock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqBagItemLock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // int32 isLock = 2;
  if (this->_internal_islock() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_islock());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqBagItemLock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqBagItemLock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqBagItemLock::GetClassData() const { return &_class_data_; }

void ReqBagItemLock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqBagItemLock *>(to)->MergeFrom(
      static_cast<const ReqBagItemLock &>(from));
}


void ReqBagItemLock::MergeFrom(const ReqBagItemLock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqBagItemLock)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_islock() != 0) {
    _internal_set_islock(from._internal_islock());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqBagItemLock::CopyFrom(const ReqBagItemLock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqBagItemLock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqBagItemLock::IsInitialized() const {
  return true;
}

void ReqBagItemLock::InternalSwap(ReqBagItemLock* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
  swap(islock_, other->islock_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqBagItemLock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[14]);
}

// ===================================================================

class ResBagItemLock::_Internal {
 public:
};

ResBagItemLock::ResBagItemLock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResBagItemLock)
}
ResBagItemLock::ResBagItemLock(const ResBagItemLock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(from._internal_uid(), 
      GetArenaForAllocation());
  }
  islock_ = from.islock_;
  // @@protoc_insertion_point(copy_constructor:ResBagItemLock)
}

inline void ResBagItemLock::SharedCtor() {
uid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
islock_ = 0;
}

ResBagItemLock::~ResBagItemLock() {
  // @@protoc_insertion_point(destructor:ResBagItemLock)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResBagItemLock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uid_.Destroy();
}

void ResBagItemLock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResBagItemLock::Clear() {
// @@protoc_insertion_point(message_clear_start:ResBagItemLock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmpty();
  islock_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResBagItemLock::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ResBagItemLock.uid"));
        } else
          goto handle_unusual;
        continue;
      // int32 isLock = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          islock_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResBagItemLock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResBagItemLock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ResBagItemLock.uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  // int32 isLock = 2;
  if (this->_internal_islock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_islock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResBagItemLock)
  return target;
}

size_t ResBagItemLock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResBagItemLock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // int32 isLock = 2;
  if (this->_internal_islock() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_islock());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResBagItemLock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResBagItemLock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResBagItemLock::GetClassData() const { return &_class_data_; }

void ResBagItemLock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResBagItemLock *>(to)->MergeFrom(
      static_cast<const ResBagItemLock &>(from));
}


void ResBagItemLock::MergeFrom(const ResBagItemLock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResBagItemLock)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_islock() != 0) {
    _internal_set_islock(from._internal_islock());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResBagItemLock::CopyFrom(const ResBagItemLock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResBagItemLock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResBagItemLock::IsInitialized() const {
  return true;
}

void ResBagItemLock::InternalSwap(ResBagItemLock* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
  swap(islock_, other->islock_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResBagItemLock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[15]);
}

// ===================================================================

class ReqBagDelItem::_Internal {
 public:
};

ReqBagDelItem::ReqBagDelItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqBagDelItem)
}
ReqBagDelItem::ReqBagDelItem(const ReqBagDelItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(from._internal_uid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ReqBagDelItem)
}

inline void ReqBagDelItem::SharedCtor() {
uid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReqBagDelItem::~ReqBagDelItem() {
  // @@protoc_insertion_point(destructor:ReqBagDelItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqBagDelItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uid_.Destroy();
}

void ReqBagDelItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqBagDelItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqBagDelItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqBagDelItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ReqBagDelItem.uid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqBagDelItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqBagDelItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReqBagDelItem.uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqBagDelItem)
  return target;
}

size_t ReqBagDelItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqBagDelItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqBagDelItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqBagDelItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqBagDelItem::GetClassData() const { return &_class_data_; }

void ReqBagDelItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqBagDelItem *>(to)->MergeFrom(
      static_cast<const ReqBagDelItem &>(from));
}


void ReqBagDelItem::MergeFrom(const ReqBagDelItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqBagDelItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqBagDelItem::CopyFrom(const ReqBagDelItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqBagDelItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqBagDelItem::IsInitialized() const {
  return true;
}

void ReqBagDelItem::InternalSwap(ReqBagDelItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqBagDelItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[16]);
}

// ===================================================================

class ReqEquipLevelUp::_Internal {
 public:
};

ReqEquipLevelUp::ReqEquipLevelUp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  itemlist_(arena),
  uids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqEquipLevelUp)
}
ReqEquipLevelUp::ReqEquipLevelUp(const ReqEquipLevelUp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      itemlist_(from.itemlist_),
      uids_(from.uids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(from._internal_uid(), 
      GetArenaForAllocation());
  }
  heroid_ = from.heroid_;
  // @@protoc_insertion_point(copy_constructor:ReqEquipLevelUp)
}

inline void ReqEquipLevelUp::SharedCtor() {
uid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
heroid_ = 0;
}

ReqEquipLevelUp::~ReqEquipLevelUp() {
  // @@protoc_insertion_point(destructor:ReqEquipLevelUp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqEquipLevelUp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uid_.Destroy();
}

void ReqEquipLevelUp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqEquipLevelUp::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqEquipLevelUp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  itemlist_.Clear();
  uids_.Clear();
  uid_.ClearToEmpty();
  heroid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqEquipLevelUp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ReqEquipLevelUp.uid"));
        } else
          goto handle_unusual;
        continue;
      // repeated .ItemInfo itemlist = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_itemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string uids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ReqEquipLevelUp.uids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 heroId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          heroid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqEquipLevelUp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqEquipLevelUp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReqEquipLevelUp.uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  // repeated .ItemInfo itemlist = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_itemlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_itemlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string uids = 3;
  for (int i = 0, n = this->_internal_uids_size(); i < n; i++) {
    const auto& s = this->_internal_uids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReqEquipLevelUp.uids");
    target = stream->WriteString(3, s, target);
  }

  // int32 heroId = 4;
  if (this->_internal_heroid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_heroid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqEquipLevelUp)
  return target;
}

size_t ReqEquipLevelUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqEquipLevelUp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ItemInfo itemlist = 2;
  total_size += 1UL * this->_internal_itemlist_size();
  for (const auto& msg : this->itemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string uids = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(uids_.size());
  for (int i = 0, n = uids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      uids_.Get(i));
  }

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // int32 heroId = 4;
  if (this->_internal_heroid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_heroid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqEquipLevelUp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqEquipLevelUp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqEquipLevelUp::GetClassData() const { return &_class_data_; }

void ReqEquipLevelUp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqEquipLevelUp *>(to)->MergeFrom(
      static_cast<const ReqEquipLevelUp &>(from));
}


void ReqEquipLevelUp::MergeFrom(const ReqEquipLevelUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqEquipLevelUp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  itemlist_.MergeFrom(from.itemlist_);
  uids_.MergeFrom(from.uids_);
  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_heroid() != 0) {
    _internal_set_heroid(from._internal_heroid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqEquipLevelUp::CopyFrom(const ReqEquipLevelUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqEquipLevelUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqEquipLevelUp::IsInitialized() const {
  return true;
}

void ReqEquipLevelUp::InternalSwap(ReqEquipLevelUp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  itemlist_.InternalSwap(&other->itemlist_);
  uids_.InternalSwap(&other->uids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
  swap(heroid_, other->heroid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqEquipLevelUp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[17]);
}

// ===================================================================

class ResEquipLevelUp::_Internal {
 public:
};

ResEquipLevelUp::ResEquipLevelUp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  attrs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResEquipLevelUp)
}
ResEquipLevelUp::ResEquipLevelUp(const ResEquipLevelUp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      attrs_(from.attrs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    guid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_guid().empty()) {
    guid_.Set(from._internal_guid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&heroid_) -
    reinterpret_cast<char*>(&level_)) + sizeof(heroid_));
  // @@protoc_insertion_point(copy_constructor:ResEquipLevelUp)
}

inline void ResEquipLevelUp::SharedCtor() {
guid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  guid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&level_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&heroid_) -
    reinterpret_cast<char*>(&level_)) + sizeof(heroid_));
}

ResEquipLevelUp::~ResEquipLevelUp() {
  // @@protoc_insertion_point(destructor:ResEquipLevelUp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResEquipLevelUp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  guid_.Destroy();
}

void ResEquipLevelUp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResEquipLevelUp::Clear() {
// @@protoc_insertion_point(message_clear_start:ResEquipLevelUp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attrs_.Clear();
  guid_.ClearToEmpty();
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heroid_) -
      reinterpret_cast<char*>(&level_)) + sizeof(heroid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResEquipLevelUp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_guid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ResEquipLevelUp.guid"));
        } else
          goto handle_unusual;
        continue;
      // int32 level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 exp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 heroId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          heroid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .itemAttrInfo attrs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attrs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResEquipLevelUp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResEquipLevelUp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string guid = 1;
  if (!this->_internal_guid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_guid().data(), static_cast<int>(this->_internal_guid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ResEquipLevelUp.guid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_guid(), target);
  }

  // int32 level = 2;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  // int32 exp = 3;
  if (this->_internal_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_exp(), target);
  }

  // int32 heroId = 4;
  if (this->_internal_heroid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_heroid(), target);
  }

  // repeated .itemAttrInfo attrs = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attrs_size()); i < n; i++) {
    const auto& repfield = this->_internal_attrs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResEquipLevelUp)
  return target;
}

size_t ResEquipLevelUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResEquipLevelUp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .itemAttrInfo attrs = 5;
  total_size += 1UL * this->_internal_attrs_size();
  for (const auto& msg : this->attrs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string guid = 1;
  if (!this->_internal_guid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_guid());
  }

  // int32 level = 2;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 exp = 3;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_exp());
  }

  // int32 heroId = 4;
  if (this->_internal_heroid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_heroid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResEquipLevelUp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResEquipLevelUp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResEquipLevelUp::GetClassData() const { return &_class_data_; }

void ResEquipLevelUp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResEquipLevelUp *>(to)->MergeFrom(
      static_cast<const ResEquipLevelUp &>(from));
}


void ResEquipLevelUp::MergeFrom(const ResEquipLevelUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResEquipLevelUp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  attrs_.MergeFrom(from.attrs_);
  if (!from._internal_guid().empty()) {
    _internal_set_guid(from._internal_guid());
  }
  if (from._internal_level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from._internal_exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from._internal_heroid() != 0) {
    _internal_set_heroid(from._internal_heroid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResEquipLevelUp::CopyFrom(const ResEquipLevelUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResEquipLevelUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResEquipLevelUp::IsInitialized() const {
  return true;
}

void ResEquipLevelUp::InternalSwap(ResEquipLevelUp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  attrs_.InternalSwap(&other->attrs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &guid_, lhs_arena,
      &other->guid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResEquipLevelUp, heroid_)
      + sizeof(ResEquipLevelUp::heroid_)
      - PROTOBUF_FIELD_OFFSET(ResEquipLevelUp, level_)>(
          reinterpret_cast<char*>(&level_),
          reinterpret_cast<char*>(&other->level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResEquipLevelUp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[18]);
}

// ===================================================================

class ReqUseItem::_Internal {
 public:
};

ReqUseItem::ReqUseItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqUseItem)
}
ReqUseItem::ReqUseItem(const ReqUseItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cnt_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cnt_));
  // @@protoc_insertion_point(copy_constructor:ReqUseItem)
}

inline void ReqUseItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cnt_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cnt_));
}

ReqUseItem::~ReqUseItem() {
  // @@protoc_insertion_point(destructor:ReqUseItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqUseItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReqUseItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqUseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqUseItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cnt_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cnt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqUseItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 cnt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          cnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqUseItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqUseItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 cnt = 2;
  if (this->_internal_cnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_cnt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqUseItem)
  return target;
}

size_t ReqUseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqUseItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 cnt = 2;
  if (this->_internal_cnt() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cnt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqUseItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqUseItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqUseItem::GetClassData() const { return &_class_data_; }

void ReqUseItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqUseItem *>(to)->MergeFrom(
      static_cast<const ReqUseItem &>(from));
}


void ReqUseItem::MergeFrom(const ReqUseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_cnt() != 0) {
    _internal_set_cnt(from._internal_cnt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqUseItem::CopyFrom(const ReqUseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqUseItem::IsInitialized() const {
  return true;
}

void ReqUseItem::InternalSwap(ReqUseItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqUseItem, cnt_)
      + sizeof(ReqUseItem::cnt_)
      - PROTOBUF_FIELD_OFFSET(ReqUseItem, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqUseItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[19]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::itemAttrInfo*
Arena::CreateMaybeMessage< ::itemAttrInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::itemAttrInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::EquipInfo*
Arena::CreateMaybeMessage< ::EquipInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EquipInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ItemInfo*
Arena::CreateMaybeMessage< ::ItemInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ItemInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::BagInfo*
Arena::CreateMaybeMessage< ::BagInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BagInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqAllBagInfo*
Arena::CreateMaybeMessage< ::ReqAllBagInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqAllBagInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ResAllBagInfo*
Arena::CreateMaybeMessage< ::ResAllBagInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResAllBagInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::NotifyBagInfoSignUp*
Arena::CreateMaybeMessage< ::NotifyBagInfoSignUp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NotifyBagInfoSignUp >(arena);
}
template<> PROTOBUF_NOINLINE ::NotifyDeleteItem*
Arena::CreateMaybeMessage< ::NotifyDeleteItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NotifyDeleteItem >(arena);
}
template<> PROTOBUF_NOINLINE ::CurrencyInfo*
Arena::CreateMaybeMessage< ::CurrencyInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CurrencyInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqCurrencyInfo*
Arena::CreateMaybeMessage< ::ReqCurrencyInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqCurrencyInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ResCurrencyInfo*
Arena::CreateMaybeMessage< ::ResCurrencyInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResCurrencyInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::NotifyCurrencyUpdate*
Arena::CreateMaybeMessage< ::NotifyCurrencyUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NotifyCurrencyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::NotifyDeleteCurrency*
Arena::CreateMaybeMessage< ::NotifyDeleteCurrency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NotifyDeleteCurrency >(arena);
}
template<> PROTOBUF_NOINLINE ::NotifyClientRewardTips*
Arena::CreateMaybeMessage< ::NotifyClientRewardTips >(Arena* arena) {
  return Arena::CreateMessageInternal< ::NotifyClientRewardTips >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqBagItemLock*
Arena::CreateMaybeMessage< ::ReqBagItemLock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqBagItemLock >(arena);
}
template<> PROTOBUF_NOINLINE ::ResBagItemLock*
Arena::CreateMaybeMessage< ::ResBagItemLock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResBagItemLock >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqBagDelItem*
Arena::CreateMaybeMessage< ::ReqBagDelItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqBagDelItem >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqEquipLevelUp*
Arena::CreateMaybeMessage< ::ReqEquipLevelUp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqEquipLevelUp >(arena);
}
template<> PROTOBUF_NOINLINE ::ResEquipLevelUp*
Arena::CreateMaybeMessage< ::ResEquipLevelUp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResEquipLevelUp >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqUseItem*
Arena::CreateMaybeMessage< ::ReqUseItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqUseItem >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
