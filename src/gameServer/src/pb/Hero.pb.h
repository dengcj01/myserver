// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Hero.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Hero_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Hero_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Hero_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Hero_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Hero_2eproto;
class HeroData;
struct HeroDataDefaultTypeInternal;
extern HeroDataDefaultTypeInternal _HeroData_default_instance_;
class ReqHeroList;
struct ReqHeroListDefaultTypeInternal;
extern ReqHeroListDefaultTypeInternal _ReqHeroList_default_instance_;
class ResHeroList;
struct ResHeroListDefaultTypeInternal;
extern ResHeroListDefaultTypeInternal _ResHeroList_default_instance_;
class ResNewHeroList;
struct ResNewHeroListDefaultTypeInternal;
extern ResNewHeroListDefaultTypeInternal _ResNewHeroList_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::HeroData* Arena::CreateMaybeMessage<::HeroData>(Arena*);
template<> ::ReqHeroList* Arena::CreateMaybeMessage<::ReqHeroList>(Arena*);
template<> ::ResHeroList* Arena::CreateMaybeMessage<::ResHeroList>(Arena*);
template<> ::ResNewHeroList* Arena::CreateMaybeMessage<::ResNewHeroList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ReqHeroList final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ReqHeroList) */ {
 public:
  inline ReqHeroList() : ReqHeroList(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ReqHeroList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReqHeroList(const ReqHeroList& from);
  ReqHeroList(ReqHeroList&& from) noexcept
    : ReqHeroList() {
    *this = ::std::move(from);
  }

  inline ReqHeroList& operator=(const ReqHeroList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqHeroList& operator=(ReqHeroList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqHeroList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqHeroList* internal_default_instance() {
    return reinterpret_cast<const ReqHeroList*>(
               &_ReqHeroList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ReqHeroList& a, ReqHeroList& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqHeroList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqHeroList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqHeroList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqHeroList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReqHeroList& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReqHeroList& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ReqHeroList";
  }
  protected:
  explicit ReqHeroList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ReqHeroList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_Hero_2eproto;
};
// -------------------------------------------------------------------

class HeroData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HeroData) */ {
 public:
  inline HeroData() : HeroData(nullptr) {}
  ~HeroData() override;
  explicit PROTOBUF_CONSTEXPR HeroData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HeroData(const HeroData& from);
  HeroData(HeroData&& from) noexcept
    : HeroData() {
    *this = ::std::move(from);
  }

  inline HeroData& operator=(const HeroData& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeroData& operator=(HeroData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HeroData& default_instance() {
    return *internal_default_instance();
  }
  static inline const HeroData* internal_default_instance() {
    return reinterpret_cast<const HeroData*>(
               &_HeroData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HeroData& a, HeroData& b) {
    a.Swap(&b);
  }
  inline void Swap(HeroData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeroData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HeroData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HeroData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HeroData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const HeroData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeroData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HeroData";
  }
  protected:
  explicit HeroData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kIdFieldNumber = 2,
    kLevelFieldNumber = 3,
    kStarFieldNumber = 4,
    kStepFieldNumber = 5,
    kPowerFieldNumber = 6,
    kSkinFieldNumber = 7,
  };
  // uint64 uid = 1;
  void clear_uid();
  uint64_t uid() const;
  void set_uid(uint64_t value);
  private:
  uint64_t _internal_uid() const;
  void _internal_set_uid(uint64_t value);
  public:

  // int32 id = 2;
  void clear_id();
  int32_t id() const;
  void set_id(int32_t value);
  private:
  int32_t _internal_id() const;
  void _internal_set_id(int32_t value);
  public:

  // int32 level = 3;
  void clear_level();
  int32_t level() const;
  void set_level(int32_t value);
  private:
  int32_t _internal_level() const;
  void _internal_set_level(int32_t value);
  public:

  // int32 star = 4;
  void clear_star();
  int32_t star() const;
  void set_star(int32_t value);
  private:
  int32_t _internal_star() const;
  void _internal_set_star(int32_t value);
  public:

  // int32 step = 5;
  void clear_step();
  int32_t step() const;
  void set_step(int32_t value);
  private:
  int32_t _internal_step() const;
  void _internal_set_step(int32_t value);
  public:

  // uint64 power = 6;
  void clear_power();
  uint64_t power() const;
  void set_power(uint64_t value);
  private:
  uint64_t _internal_power() const;
  void _internal_set_power(uint64_t value);
  public:

  // int32 skin = 7;
  void clear_skin();
  int32_t skin() const;
  void set_skin(int32_t value);
  private:
  int32_t _internal_skin() const;
  void _internal_set_skin(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:HeroData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t uid_;
  int32_t id_;
  int32_t level_;
  int32_t star_;
  int32_t step_;
  uint64_t power_;
  int32_t skin_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Hero_2eproto;
};
// -------------------------------------------------------------------

class ResHeroList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ResHeroList) */ {
 public:
  inline ResHeroList() : ResHeroList(nullptr) {}
  ~ResHeroList() override;
  explicit PROTOBUF_CONSTEXPR ResHeroList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResHeroList(const ResHeroList& from);
  ResHeroList(ResHeroList&& from) noexcept
    : ResHeroList() {
    *this = ::std::move(from);
  }

  inline ResHeroList& operator=(const ResHeroList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResHeroList& operator=(ResHeroList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResHeroList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResHeroList* internal_default_instance() {
    return reinterpret_cast<const ResHeroList*>(
               &_ResHeroList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ResHeroList& a, ResHeroList& b) {
    a.Swap(&b);
  }
  inline void Swap(ResHeroList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResHeroList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResHeroList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResHeroList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ResHeroList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ResHeroList& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResHeroList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ResHeroList";
  }
  protected:
  explicit ResHeroList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .HeroData data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::HeroData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData >*
      mutable_data();
  private:
  const ::HeroData& _internal_data(int index) const;
  ::HeroData* _internal_add_data();
  public:
  const ::HeroData& data(int index) const;
  ::HeroData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData >&
      data() const;

  // @@protoc_insertion_point(class_scope:ResHeroList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Hero_2eproto;
};
// -------------------------------------------------------------------

class ResNewHeroList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ResNewHeroList) */ {
 public:
  inline ResNewHeroList() : ResNewHeroList(nullptr) {}
  ~ResNewHeroList() override;
  explicit PROTOBUF_CONSTEXPR ResNewHeroList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResNewHeroList(const ResNewHeroList& from);
  ResNewHeroList(ResNewHeroList&& from) noexcept
    : ResNewHeroList() {
    *this = ::std::move(from);
  }

  inline ResNewHeroList& operator=(const ResNewHeroList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResNewHeroList& operator=(ResNewHeroList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResNewHeroList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResNewHeroList* internal_default_instance() {
    return reinterpret_cast<const ResNewHeroList*>(
               &_ResNewHeroList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ResNewHeroList& a, ResNewHeroList& b) {
    a.Swap(&b);
  }
  inline void Swap(ResNewHeroList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResNewHeroList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResNewHeroList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResNewHeroList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ResNewHeroList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ResNewHeroList& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResNewHeroList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ResNewHeroList";
  }
  protected:
  explicit ResNewHeroList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .HeroData data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::HeroData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData >*
      mutable_data();
  private:
  const ::HeroData& _internal_data(int index) const;
  ::HeroData* _internal_add_data();
  public:
  const ::HeroData& data(int index) const;
  ::HeroData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData >&
      data() const;

  // @@protoc_insertion_point(class_scope:ResNewHeroList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Hero_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqHeroList

// -------------------------------------------------------------------

// HeroData

// uint64 uid = 1;
inline void HeroData::clear_uid() {
  uid_ = uint64_t{0u};
}
inline uint64_t HeroData::_internal_uid() const {
  return uid_;
}
inline uint64_t HeroData::uid() const {
  // @@protoc_insertion_point(field_get:HeroData.uid)
  return _internal_uid();
}
inline void HeroData::_internal_set_uid(uint64_t value) {
  
  uid_ = value;
}
inline void HeroData::set_uid(uint64_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:HeroData.uid)
}

// int32 id = 2;
inline void HeroData::clear_id() {
  id_ = 0;
}
inline int32_t HeroData::_internal_id() const {
  return id_;
}
inline int32_t HeroData::id() const {
  // @@protoc_insertion_point(field_get:HeroData.id)
  return _internal_id();
}
inline void HeroData::_internal_set_id(int32_t value) {
  
  id_ = value;
}
inline void HeroData::set_id(int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:HeroData.id)
}

// int32 level = 3;
inline void HeroData::clear_level() {
  level_ = 0;
}
inline int32_t HeroData::_internal_level() const {
  return level_;
}
inline int32_t HeroData::level() const {
  // @@protoc_insertion_point(field_get:HeroData.level)
  return _internal_level();
}
inline void HeroData::_internal_set_level(int32_t value) {
  
  level_ = value;
}
inline void HeroData::set_level(int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:HeroData.level)
}

// int32 star = 4;
inline void HeroData::clear_star() {
  star_ = 0;
}
inline int32_t HeroData::_internal_star() const {
  return star_;
}
inline int32_t HeroData::star() const {
  // @@protoc_insertion_point(field_get:HeroData.star)
  return _internal_star();
}
inline void HeroData::_internal_set_star(int32_t value) {
  
  star_ = value;
}
inline void HeroData::set_star(int32_t value) {
  _internal_set_star(value);
  // @@protoc_insertion_point(field_set:HeroData.star)
}

// int32 step = 5;
inline void HeroData::clear_step() {
  step_ = 0;
}
inline int32_t HeroData::_internal_step() const {
  return step_;
}
inline int32_t HeroData::step() const {
  // @@protoc_insertion_point(field_get:HeroData.step)
  return _internal_step();
}
inline void HeroData::_internal_set_step(int32_t value) {
  
  step_ = value;
}
inline void HeroData::set_step(int32_t value) {
  _internal_set_step(value);
  // @@protoc_insertion_point(field_set:HeroData.step)
}

// uint64 power = 6;
inline void HeroData::clear_power() {
  power_ = uint64_t{0u};
}
inline uint64_t HeroData::_internal_power() const {
  return power_;
}
inline uint64_t HeroData::power() const {
  // @@protoc_insertion_point(field_get:HeroData.power)
  return _internal_power();
}
inline void HeroData::_internal_set_power(uint64_t value) {
  
  power_ = value;
}
inline void HeroData::set_power(uint64_t value) {
  _internal_set_power(value);
  // @@protoc_insertion_point(field_set:HeroData.power)
}

// int32 skin = 7;
inline void HeroData::clear_skin() {
  skin_ = 0;
}
inline int32_t HeroData::_internal_skin() const {
  return skin_;
}
inline int32_t HeroData::skin() const {
  // @@protoc_insertion_point(field_get:HeroData.skin)
  return _internal_skin();
}
inline void HeroData::_internal_set_skin(int32_t value) {
  
  skin_ = value;
}
inline void HeroData::set_skin(int32_t value) {
  _internal_set_skin(value);
  // @@protoc_insertion_point(field_set:HeroData.skin)
}

// -------------------------------------------------------------------

// ResHeroList

// repeated .HeroData data = 1;
inline int ResHeroList::_internal_data_size() const {
  return data_.size();
}
inline int ResHeroList::data_size() const {
  return _internal_data_size();
}
inline void ResHeroList::clear_data() {
  data_.Clear();
}
inline ::HeroData* ResHeroList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ResHeroList.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData >*
ResHeroList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ResHeroList.data)
  return &data_;
}
inline const ::HeroData& ResHeroList::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::HeroData& ResHeroList::data(int index) const {
  // @@protoc_insertion_point(field_get:ResHeroList.data)
  return _internal_data(index);
}
inline ::HeroData* ResHeroList::_internal_add_data() {
  return data_.Add();
}
inline ::HeroData* ResHeroList::add_data() {
  ::HeroData* _add = _internal_add_data();
  // @@protoc_insertion_point(field_add:ResHeroList.data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData >&
ResHeroList::data() const {
  // @@protoc_insertion_point(field_list:ResHeroList.data)
  return data_;
}

// -------------------------------------------------------------------

// ResNewHeroList

// repeated .HeroData data = 1;
inline int ResNewHeroList::_internal_data_size() const {
  return data_.size();
}
inline int ResNewHeroList::data_size() const {
  return _internal_data_size();
}
inline void ResNewHeroList::clear_data() {
  data_.Clear();
}
inline ::HeroData* ResNewHeroList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ResNewHeroList.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData >*
ResNewHeroList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ResNewHeroList.data)
  return &data_;
}
inline const ::HeroData& ResNewHeroList::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::HeroData& ResNewHeroList::data(int index) const {
  // @@protoc_insertion_point(field_get:ResNewHeroList.data)
  return _internal_data(index);
}
inline ::HeroData* ResNewHeroList::_internal_add_data() {
  return data_.Add();
}
inline ::HeroData* ResNewHeroList::add_data() {
  ::HeroData* _add = _internal_add_data();
  // @@protoc_insertion_point(field_add:ResNewHeroList.data)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HeroData >&
ResNewHeroList::data() const {
  // @@protoc_insertion_point(field_list:ResNewHeroList.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Hero_2eproto
