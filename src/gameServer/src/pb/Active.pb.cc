// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Active.proto

#include "Active.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR ReqActiveData::ReqActiveData(
    ::_pbi::ConstantInitialized){}
struct ReqActiveDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqActiveDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqActiveDataDefaultTypeInternal() {}
  union {
    ReqActiveData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqActiveDataDefaultTypeInternal _ReqActiveData_default_instance_;
PROTOBUF_CONSTEXPR ActiveData::ActiveData(
    ::_pbi::ConstantInitialized)
  : param_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , id_(0)
  , type_(0)
  , starttime_(0)
  , endtime_(0){}
struct ActiveDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActiveDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActiveDataDefaultTypeInternal() {}
  union {
    ActiveData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActiveDataDefaultTypeInternal _ActiveData_default_instance_;
PROTOBUF_CONSTEXPR ResActiveData::ResActiveData(
    ::_pbi::ConstantInitialized)
  : data_(){}
struct ResActiveDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResActiveDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResActiveDataDefaultTypeInternal() {}
  union {
    ResActiveData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResActiveDataDefaultTypeInternal _ResActiveData_default_instance_;
PROTOBUF_CONSTEXPR ResNoticeOptActive::ResNoticeOptActive(
    ::_pbi::ConstantInitialized)
  : data_()
  , opt_(0){}
struct ResNoticeOptActiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResNoticeOptActiveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResNoticeOptActiveDefaultTypeInternal() {}
  union {
    ResNoticeOptActive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResNoticeOptActiveDefaultTypeInternal _ResNoticeOptActive_default_instance_;
PROTOBUF_CONSTEXPR ReqActiveConf::ReqActiveConf(
    ::_pbi::ConstantInitialized)
  : id_(0){}
struct ReqActiveConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqActiveConfDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqActiveConfDefaultTypeInternal() {}
  union {
    ReqActiveConf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqActiveConfDefaultTypeInternal _ReqActiveConf_default_instance_;
PROTOBUF_CONSTEXPR ResActiveConf::ResActiveConf(
    ::_pbi::ConstantInitialized)
  : data_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , id_(0){}
struct ResActiveConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResActiveConfDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResActiveConfDefaultTypeInternal() {}
  union {
    ResActiveConf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResActiveConfDefaultTypeInternal _ResActiveConf_default_instance_;
static ::_pb::Metadata file_level_metadata_Active_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Active_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Active_2eproto = nullptr;

const uint32_t TableStruct_Active_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqActiveData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ActiveData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ActiveData, id_),
  PROTOBUF_FIELD_OFFSET(::ActiveData, type_),
  PROTOBUF_FIELD_OFFSET(::ActiveData, starttime_),
  PROTOBUF_FIELD_OFFSET(::ActiveData, endtime_),
  PROTOBUF_FIELD_OFFSET(::ActiveData, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResActiveData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResActiveData, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResNoticeOptActive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResNoticeOptActive, opt_),
  PROTOBUF_FIELD_OFFSET(::ResNoticeOptActive, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqActiveConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqActiveConf, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResActiveConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResActiveConf, id_),
  PROTOBUF_FIELD_OFFSET(::ResActiveConf, data_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ReqActiveData)},
  { 6, -1, -1, sizeof(::ActiveData)},
  { 17, -1, -1, sizeof(::ResActiveData)},
  { 24, -1, -1, sizeof(::ResNoticeOptActive)},
  { 32, -1, -1, sizeof(::ReqActiveConf)},
  { 39, -1, -1, sizeof(::ResActiveConf)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_ReqActiveData_default_instance_._instance,
  &::_ActiveData_default_instance_._instance,
  &::_ResActiveData_default_instance_._instance,
  &::_ResNoticeOptActive_default_instance_._instance,
  &::_ReqActiveConf_default_instance_._instance,
  &::_ResActiveConf_default_instance_._instance,
};

const char descriptor_table_protodef_Active_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014Active.proto\"\017\n\rReqActiveData\"Y\n\nActiv"
  "eData\022\n\n\002id\030\001 \001(\021\022\014\n\004type\030\002 \001(\021\022\021\n\tstart"
  "Time\030\003 \001(\021\022\017\n\007endTime\030\004 \001(\021\022\r\n\005param\030\005 \001"
  "(\014\"*\n\rResActiveData\022\031\n\004data\030\001 \003(\0132\013.Acti"
  "veData\"<\n\022ResNoticeOptActive\022\013\n\003opt\030\001 \001("
  "\021\022\031\n\004data\030\002 \003(\0132\013.ActiveData\"\033\n\rReqActiv"
  "eConf\022\n\n\002id\030\001 \001(\021\")\n\rResActiveConf\022\n\n\002id"
  "\030\001 \001(\021\022\014\n\004data\030\002 \001(\014b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Active_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Active_2eproto = {
    false, false, 308, descriptor_table_protodef_Active_2eproto,
    "Active.proto",
    &descriptor_table_Active_2eproto_once, nullptr, 0, 6,
    schemas, file_default_instances, TableStruct_Active_2eproto::offsets,
    file_level_metadata_Active_2eproto, file_level_enum_descriptors_Active_2eproto,
    file_level_service_descriptors_Active_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Active_2eproto_getter() {
  return &descriptor_table_Active_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Active_2eproto(&descriptor_table_Active_2eproto);

// ===================================================================

class ReqActiveData::_Internal {
 public:
};

ReqActiveData::ReqActiveData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ReqActiveData)
}
ReqActiveData::ReqActiveData(const ReqActiveData& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ReqActiveData)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqActiveData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqActiveData::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReqActiveData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Active_2eproto_getter, &descriptor_table_Active_2eproto_once,
      file_level_metadata_Active_2eproto[0]);
}

// ===================================================================

class ActiveData::_Internal {
 public:
};

ActiveData::ActiveData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ActiveData)
}
ActiveData::ActiveData(const ActiveData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_param().empty()) {
    param_.Set(from._internal_param(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&id_)) + sizeof(endtime_));
  // @@protoc_insertion_point(copy_constructor:ActiveData)
}

inline void ActiveData::SharedCtor() {
param_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  param_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&id_)) + sizeof(endtime_));
}

ActiveData::~ActiveData() {
  // @@protoc_insertion_point(destructor:ActiveData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActiveData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  param_.Destroy();
}

void ActiveData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ActiveData::Clear() {
// @@protoc_insertion_point(message_clear_start:ActiveData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endtime_) -
      reinterpret_cast<char*>(&id_)) + sizeof(endtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActiveData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 startTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          starttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 endTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          endtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes param = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActiveData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActiveData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_id(), target);
  }

  // sint32 type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_type(), target);
  }

  // sint32 startTime = 3;
  if (this->_internal_starttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_starttime(), target);
  }

  // sint32 endTime = 4;
  if (this->_internal_endtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(4, this->_internal_endtime(), target);
  }

  // bytes param = 5;
  if (!this->_internal_param().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActiveData)
  return target;
}

size_t ActiveData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActiveData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes param = 5;
  if (!this->_internal_param().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_param());
  }

  // sint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_id());
  }

  // sint32 type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_type());
  }

  // sint32 startTime = 3;
  if (this->_internal_starttime() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_starttime());
  }

  // sint32 endTime = 4;
  if (this->_internal_endtime() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_endtime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActiveData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ActiveData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActiveData::GetClassData() const { return &_class_data_; }

void ActiveData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ActiveData *>(to)->MergeFrom(
      static_cast<const ActiveData &>(from));
}


void ActiveData::MergeFrom(const ActiveData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActiveData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_param().empty()) {
    _internal_set_param(from._internal_param());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_starttime() != 0) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from._internal_endtime() != 0) {
    _internal_set_endtime(from._internal_endtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActiveData::CopyFrom(const ActiveData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActiveData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveData::IsInitialized() const {
  return true;
}

void ActiveData::InternalSwap(ActiveData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &param_, lhs_arena,
      &other->param_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActiveData, endtime_)
      + sizeof(ActiveData::endtime_)
      - PROTOBUF_FIELD_OFFSET(ActiveData, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActiveData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Active_2eproto_getter, &descriptor_table_Active_2eproto_once,
      file_level_metadata_Active_2eproto[1]);
}

// ===================================================================

class ResActiveData::_Internal {
 public:
};

ResActiveData::ResActiveData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResActiveData)
}
ResActiveData::ResActiveData(const ResActiveData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResActiveData)
}

inline void ResActiveData::SharedCtor() {
}

ResActiveData::~ResActiveData() {
  // @@protoc_insertion_point(destructor:ResActiveData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResActiveData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResActiveData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResActiveData::Clear() {
// @@protoc_insertion_point(message_clear_start:ResActiveData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResActiveData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ActiveData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResActiveData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResActiveData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActiveData data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResActiveData)
  return target;
}

size_t ResActiveData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResActiveData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ActiveData data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResActiveData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResActiveData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResActiveData::GetClassData() const { return &_class_data_; }

void ResActiveData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResActiveData *>(to)->MergeFrom(
      static_cast<const ResActiveData &>(from));
}


void ResActiveData::MergeFrom(const ResActiveData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResActiveData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResActiveData::CopyFrom(const ResActiveData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResActiveData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResActiveData::IsInitialized() const {
  return true;
}

void ResActiveData::InternalSwap(ResActiveData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResActiveData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Active_2eproto_getter, &descriptor_table_Active_2eproto_once,
      file_level_metadata_Active_2eproto[2]);
}

// ===================================================================

class ResNoticeOptActive::_Internal {
 public:
};

ResNoticeOptActive::ResNoticeOptActive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResNoticeOptActive)
}
ResNoticeOptActive::ResNoticeOptActive(const ResNoticeOptActive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  opt_ = from.opt_;
  // @@protoc_insertion_point(copy_constructor:ResNoticeOptActive)
}

inline void ResNoticeOptActive::SharedCtor() {
opt_ = 0;
}

ResNoticeOptActive::~ResNoticeOptActive() {
  // @@protoc_insertion_point(destructor:ResNoticeOptActive)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResNoticeOptActive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResNoticeOptActive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResNoticeOptActive::Clear() {
// @@protoc_insertion_point(message_clear_start:ResNoticeOptActive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  opt_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResNoticeOptActive::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 opt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          opt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ActiveData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResNoticeOptActive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResNoticeOptActive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 opt = 1;
  if (this->_internal_opt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_opt(), target);
  }

  // repeated .ActiveData data = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResNoticeOptActive)
  return target;
}

size_t ResNoticeOptActive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResNoticeOptActive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ActiveData data = 2;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // sint32 opt = 1;
  if (this->_internal_opt() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_opt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResNoticeOptActive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResNoticeOptActive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResNoticeOptActive::GetClassData() const { return &_class_data_; }

void ResNoticeOptActive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResNoticeOptActive *>(to)->MergeFrom(
      static_cast<const ResNoticeOptActive &>(from));
}


void ResNoticeOptActive::MergeFrom(const ResNoticeOptActive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResNoticeOptActive)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from._internal_opt() != 0) {
    _internal_set_opt(from._internal_opt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResNoticeOptActive::CopyFrom(const ResNoticeOptActive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResNoticeOptActive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNoticeOptActive::IsInitialized() const {
  return true;
}

void ResNoticeOptActive::InternalSwap(ResNoticeOptActive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  swap(opt_, other->opt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResNoticeOptActive::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Active_2eproto_getter, &descriptor_table_Active_2eproto_once,
      file_level_metadata_Active_2eproto[3]);
}

// ===================================================================

class ReqActiveConf::_Internal {
 public:
};

ReqActiveConf::ReqActiveConf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqActiveConf)
}
ReqActiveConf::ReqActiveConf(const ReqActiveConf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ReqActiveConf)
}

inline void ReqActiveConf::SharedCtor() {
id_ = 0;
}

ReqActiveConf::~ReqActiveConf() {
  // @@protoc_insertion_point(destructor:ReqActiveConf)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqActiveConf::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReqActiveConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqActiveConf::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqActiveConf)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqActiveConf::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqActiveConf::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqActiveConf)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqActiveConf)
  return target;
}

size_t ReqActiveConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqActiveConf)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqActiveConf::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqActiveConf::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqActiveConf::GetClassData() const { return &_class_data_; }

void ReqActiveConf::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqActiveConf *>(to)->MergeFrom(
      static_cast<const ReqActiveConf &>(from));
}


void ReqActiveConf::MergeFrom(const ReqActiveConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqActiveConf)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqActiveConf::CopyFrom(const ReqActiveConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqActiveConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqActiveConf::IsInitialized() const {
  return true;
}

void ReqActiveConf::InternalSwap(ReqActiveConf* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqActiveConf::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Active_2eproto_getter, &descriptor_table_Active_2eproto_once,
      file_level_metadata_Active_2eproto[4]);
}

// ===================================================================

class ResActiveConf::_Internal {
 public:
};

ResActiveConf::ResActiveConf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResActiveConf)
}
ResActiveConf::ResActiveConf(const ResActiveConf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(from._internal_data(), 
      GetArenaForAllocation());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ResActiveConf)
}

inline void ResActiveConf::SharedCtor() {
data_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
id_ = 0;
}

ResActiveConf::~ResActiveConf() {
  // @@protoc_insertion_point(destructor:ResActiveConf)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResActiveConf::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.Destroy();
}

void ResActiveConf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResActiveConf::Clear() {
// @@protoc_insertion_point(message_clear_start:ResActiveConf)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResActiveConf::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResActiveConf::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResActiveConf)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_id(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResActiveConf)
  return target;
}

size_t ResActiveConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResActiveConf)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // sint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResActiveConf::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResActiveConf::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResActiveConf::GetClassData() const { return &_class_data_; }

void ResActiveConf::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResActiveConf *>(to)->MergeFrom(
      static_cast<const ResActiveConf &>(from));
}


void ResActiveConf::MergeFrom(const ResActiveConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResActiveConf)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResActiveConf::CopyFrom(const ResActiveConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResActiveConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResActiveConf::IsInitialized() const {
  return true;
}

void ResActiveConf::InternalSwap(ResActiveConf* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResActiveConf::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Active_2eproto_getter, &descriptor_table_Active_2eproto_once,
      file_level_metadata_Active_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ReqActiveData*
Arena::CreateMaybeMessage< ::ReqActiveData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqActiveData >(arena);
}
template<> PROTOBUF_NOINLINE ::ActiveData*
Arena::CreateMaybeMessage< ::ActiveData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ActiveData >(arena);
}
template<> PROTOBUF_NOINLINE ::ResActiveData*
Arena::CreateMaybeMessage< ::ResActiveData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResActiveData >(arena);
}
template<> PROTOBUF_NOINLINE ::ResNoticeOptActive*
Arena::CreateMaybeMessage< ::ResNoticeOptActive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResNoticeOptActive >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqActiveConf*
Arena::CreateMaybeMessage< ::ReqActiveConf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqActiveConf >(arena);
}
template<> PROTOBUF_NOINLINE ::ResActiveConf*
Arena::CreateMaybeMessage< ::ResActiveConf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResActiveConf >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
