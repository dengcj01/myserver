// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Bag.proto

#include "Bag.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR ItemData::ItemData(
    ::_pbi::ConstantInitialized)
  : guid_(uint64_t{0u})
  , count_(uint64_t{0u})
  , itemid_(0u)
  , time_(0)
  , level_(0)
  , exp_(0)
  , owner_(uint64_t{0u})
  , star_(0)
  , step_(0){}
struct ItemDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemDataDefaultTypeInternal() {}
  union {
    ItemData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemDataDefaultTypeInternal _ItemData_default_instance_;
PROTOBUF_CONSTEXPR ReqBagData::ReqBagData(
    ::_pbi::ConstantInitialized){}
struct ReqBagDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqBagDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqBagDataDefaultTypeInternal() {}
  union {
    ReqBagData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqBagDataDefaultTypeInternal _ReqBagData_default_instance_;
PROTOBUF_CONSTEXPR ResBagData::ResBagData(
    ::_pbi::ConstantInitialized)
  : data_(){}
struct ResBagDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResBagDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResBagDataDefaultTypeInternal() {}
  union {
    ResBagData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResBagDataDefaultTypeInternal _ResBagData_default_instance_;
PROTOBUF_CONSTEXPR ResServerOptItem::ResServerOptItem(
    ::_pbi::ConstantInitialized)
  : data_()
  , opt_(0){}
struct ResServerOptItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResServerOptItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResServerOptItemDefaultTypeInternal() {}
  union {
    ResServerOptItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResServerOptItemDefaultTypeInternal _ResServerOptItem_default_instance_;
PROTOBUF_CONSTEXPR ResBagItemCntUpdate::ResBagItemCntUpdate(
    ::_pbi::ConstantInitialized)
  : data_(){}
struct ResBagItemCntUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResBagItemCntUpdateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResBagItemCntUpdateDefaultTypeInternal() {}
  union {
    ResBagItemCntUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResBagItemCntUpdateDefaultTypeInternal _ResBagItemCntUpdate_default_instance_;
PROTOBUF_CONSTEXPR SimpleItemData::SimpleItemData(
    ::_pbi::ConstantInitialized)
  : count_(uint64_t{0u})
  , id_(0){}
struct SimpleItemDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleItemDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleItemDataDefaultTypeInternal() {}
  union {
    SimpleItemData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleItemDataDefaultTypeInternal _SimpleItemData_default_instance_;
PROTOBUF_CONSTEXPR ResNoticeItemReward::ResNoticeItemReward(
    ::_pbi::ConstantInitialized)
  : data_()
  , rdtype_(0)
  , param1_(0)
  , param2_(0)
  , param3_(0)
  , param4_(uint64_t{0u})
  , param5_(uint64_t{0u})
  , param6_(uint64_t{0u}){}
struct ResNoticeItemRewardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResNoticeItemRewardDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResNoticeItemRewardDefaultTypeInternal() {}
  union {
    ResNoticeItemReward _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResNoticeItemRewardDefaultTypeInternal _ResNoticeItemReward_default_instance_;
static ::_pb::Metadata file_level_metadata_Bag_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Bag_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Bag_2eproto = nullptr;

const uint32_t TableStruct_Bag_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ItemData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ItemData, guid_),
  PROTOBUF_FIELD_OFFSET(::ItemData, itemid_),
  PROTOBUF_FIELD_OFFSET(::ItemData, count_),
  PROTOBUF_FIELD_OFFSET(::ItemData, time_),
  PROTOBUF_FIELD_OFFSET(::ItemData, level_),
  PROTOBUF_FIELD_OFFSET(::ItemData, exp_),
  PROTOBUF_FIELD_OFFSET(::ItemData, owner_),
  PROTOBUF_FIELD_OFFSET(::ItemData, star_),
  PROTOBUF_FIELD_OFFSET(::ItemData, step_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqBagData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResBagData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResBagData, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResServerOptItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResServerOptItem, opt_),
  PROTOBUF_FIELD_OFFSET(::ResServerOptItem, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResBagItemCntUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResBagItemCntUpdate, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SimpleItemData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SimpleItemData, id_),
  PROTOBUF_FIELD_OFFSET(::SimpleItemData, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, data_),
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, rdtype_),
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, param1_),
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, param2_),
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, param3_),
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, param4_),
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, param5_),
  PROTOBUF_FIELD_OFFSET(::ResNoticeItemReward, param6_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ItemData)},
  { 15, -1, -1, sizeof(::ReqBagData)},
  { 21, -1, -1, sizeof(::ResBagData)},
  { 28, -1, -1, sizeof(::ResServerOptItem)},
  { 36, -1, -1, sizeof(::ResBagItemCntUpdate)},
  { 43, -1, -1, sizeof(::SimpleItemData)},
  { 51, -1, -1, sizeof(::ResNoticeItemReward)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_ItemData_default_instance_._instance,
  &::_ReqBagData_default_instance_._instance,
  &::_ResBagData_default_instance_._instance,
  &::_ResServerOptItem_default_instance_._instance,
  &::_ResBagItemCntUpdate_default_instance_._instance,
  &::_SimpleItemData_default_instance_._instance,
  &::_ResNoticeItemReward_default_instance_._instance,
};

const char descriptor_table_protodef_Bag_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tBag.proto\"\214\001\n\010ItemData\022\014\n\004guid\030\001 \001(\004\022\016"
  "\n\006itemId\030\002 \001(\r\022\r\n\005count\030\003 \001(\004\022\014\n\004time\030\004 "
  "\001(\021\022\r\n\005level\030\005 \001(\021\022\013\n\003exp\030\006 \001(\021\022\r\n\005owner"
  "\030\007 \001(\004\022\014\n\004star\030\010 \001(\021\022\014\n\004step\030\t \001(\021\"\014\n\nRe"
  "qBagData\"%\n\nResBagData\022\027\n\004data\030\001 \003(\0132\t.I"
  "temData\"8\n\020ResServerOptItem\022\013\n\003opt\030\001 \001(\021"
  "\022\027\n\004data\030\002 \003(\0132\t.ItemData\".\n\023ResBagItemC"
  "ntUpdate\022\027\n\004data\030\001 \003(\0132\t.ItemData\"+\n\016Sim"
  "pleItemData\022\n\n\002id\030\001 \001(\021\022\r\n\005count\030\002 \001(\004\"\244"
  "\001\n\023ResNoticeItemReward\022\035\n\004data\030\001 \003(\0132\017.S"
  "impleItemData\022\016\n\006rdType\030\002 \001(\021\022\016\n\006param1\030"
  "\003 \001(\021\022\016\n\006param2\030\004 \001(\021\022\016\n\006param3\030\005 \001(\021\022\016\n"
  "\006param4\030\006 \001(\004\022\016\n\006param5\030\007 \001(\004\022\016\n\006param6\030"
  "\010 \001(\004b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Bag_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Bag_2eproto = {
    false, false, 533, descriptor_table_protodef_Bag_2eproto,
    "Bag.proto",
    &descriptor_table_Bag_2eproto_once, nullptr, 0, 7,
    schemas, file_default_instances, TableStruct_Bag_2eproto::offsets,
    file_level_metadata_Bag_2eproto, file_level_enum_descriptors_Bag_2eproto,
    file_level_service_descriptors_Bag_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Bag_2eproto_getter() {
  return &descriptor_table_Bag_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Bag_2eproto(&descriptor_table_Bag_2eproto);

// ===================================================================

class ItemData::_Internal {
 public:
};

ItemData::ItemData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ItemData)
}
ItemData::ItemData(const ItemData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&step_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(step_));
  // @@protoc_insertion_point(copy_constructor:ItemData)
}

inline void ItemData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&step_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(step_));
}

ItemData::~ItemData() {
  // @@protoc_insertion_point(destructor:ItemData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ItemData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ItemData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:ItemData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(step_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 itemId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 exp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 owner = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          owner_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 star = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          star_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 step = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          step_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ItemData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ItemData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->_internal_guid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guid(), target);
  }

  // uint32 itemId = 2;
  if (this->_internal_itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_itemid(), target);
  }

  // uint64 count = 3;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_count(), target);
  }

  // sint32 time = 4;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(4, this->_internal_time(), target);
  }

  // sint32 level = 5;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(5, this->_internal_level(), target);
  }

  // sint32 exp = 6;
  if (this->_internal_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(6, this->_internal_exp(), target);
  }

  // uint64 owner = 7;
  if (this->_internal_owner() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_owner(), target);
  }

  // sint32 star = 8;
  if (this->_internal_star() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(8, this->_internal_star(), target);
  }

  // sint32 step = 9;
  if (this->_internal_step() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(9, this->_internal_step(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ItemData)
  return target;
}

size_t ItemData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ItemData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->_internal_guid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guid());
  }

  // uint64 count = 3;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  // uint32 itemId = 2;
  if (this->_internal_itemid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_itemid());
  }

  // sint32 time = 4;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_time());
  }

  // sint32 level = 5;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_level());
  }

  // sint32 exp = 6;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_exp());
  }

  // uint64 owner = 7;
  if (this->_internal_owner() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_owner());
  }

  // sint32 star = 8;
  if (this->_internal_star() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_star());
  }

  // sint32 step = 9;
  if (this->_internal_step() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_step());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ItemData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ItemData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ItemData::GetClassData() const { return &_class_data_; }

void ItemData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ItemData *>(to)->MergeFrom(
      static_cast<const ItemData &>(from));
}


void ItemData::MergeFrom(const ItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItemData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_guid() != 0) {
    _internal_set_guid(from._internal_guid());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_itemid() != 0) {
    _internal_set_itemid(from._internal_itemid());
  }
  if (from._internal_time() != 0) {
    _internal_set_time(from._internal_time());
  }
  if (from._internal_level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from._internal_exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from._internal_owner() != 0) {
    _internal_set_owner(from._internal_owner());
  }
  if (from._internal_star() != 0) {
    _internal_set_star(from._internal_star());
  }
  if (from._internal_step() != 0) {
    _internal_set_step(from._internal_step());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ItemData::CopyFrom(const ItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemData::IsInitialized() const {
  return true;
}

void ItemData::InternalSwap(ItemData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ItemData, step_)
      + sizeof(ItemData::step_)
      - PROTOBUF_FIELD_OFFSET(ItemData, guid_)>(
          reinterpret_cast<char*>(&guid_),
          reinterpret_cast<char*>(&other->guid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[0]);
}

// ===================================================================

class ReqBagData::_Internal {
 public:
};

ReqBagData::ReqBagData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ReqBagData)
}
ReqBagData::ReqBagData(const ReqBagData& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ReqBagData)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqBagData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqBagData::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReqBagData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[1]);
}

// ===================================================================

class ResBagData::_Internal {
 public:
};

ResBagData::ResBagData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResBagData)
}
ResBagData::ResBagData(const ResBagData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResBagData)
}

inline void ResBagData::SharedCtor() {
}

ResBagData::~ResBagData() {
  // @@protoc_insertion_point(destructor:ResBagData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResBagData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResBagData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResBagData::Clear() {
// @@protoc_insertion_point(message_clear_start:ResBagData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResBagData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ItemData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResBagData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResBagData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ItemData data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResBagData)
  return target;
}

size_t ResBagData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResBagData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ItemData data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResBagData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResBagData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResBagData::GetClassData() const { return &_class_data_; }

void ResBagData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResBagData *>(to)->MergeFrom(
      static_cast<const ResBagData &>(from));
}


void ResBagData::MergeFrom(const ResBagData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResBagData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResBagData::CopyFrom(const ResBagData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResBagData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResBagData::IsInitialized() const {
  return true;
}

void ResBagData::InternalSwap(ResBagData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResBagData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[2]);
}

// ===================================================================

class ResServerOptItem::_Internal {
 public:
};

ResServerOptItem::ResServerOptItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResServerOptItem)
}
ResServerOptItem::ResServerOptItem(const ResServerOptItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  opt_ = from.opt_;
  // @@protoc_insertion_point(copy_constructor:ResServerOptItem)
}

inline void ResServerOptItem::SharedCtor() {
opt_ = 0;
}

ResServerOptItem::~ResServerOptItem() {
  // @@protoc_insertion_point(destructor:ResServerOptItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResServerOptItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResServerOptItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResServerOptItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ResServerOptItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  opt_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResServerOptItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 opt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          opt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ItemData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResServerOptItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResServerOptItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 opt = 1;
  if (this->_internal_opt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_opt(), target);
  }

  // repeated .ItemData data = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResServerOptItem)
  return target;
}

size_t ResServerOptItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResServerOptItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ItemData data = 2;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // sint32 opt = 1;
  if (this->_internal_opt() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_opt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResServerOptItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResServerOptItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResServerOptItem::GetClassData() const { return &_class_data_; }

void ResServerOptItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResServerOptItem *>(to)->MergeFrom(
      static_cast<const ResServerOptItem &>(from));
}


void ResServerOptItem::MergeFrom(const ResServerOptItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResServerOptItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from._internal_opt() != 0) {
    _internal_set_opt(from._internal_opt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResServerOptItem::CopyFrom(const ResServerOptItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResServerOptItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResServerOptItem::IsInitialized() const {
  return true;
}

void ResServerOptItem::InternalSwap(ResServerOptItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  swap(opt_, other->opt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResServerOptItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[3]);
}

// ===================================================================

class ResBagItemCntUpdate::_Internal {
 public:
};

ResBagItemCntUpdate::ResBagItemCntUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResBagItemCntUpdate)
}
ResBagItemCntUpdate::ResBagItemCntUpdate(const ResBagItemCntUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResBagItemCntUpdate)
}

inline void ResBagItemCntUpdate::SharedCtor() {
}

ResBagItemCntUpdate::~ResBagItemCntUpdate() {
  // @@protoc_insertion_point(destructor:ResBagItemCntUpdate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResBagItemCntUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResBagItemCntUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResBagItemCntUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:ResBagItemCntUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResBagItemCntUpdate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ItemData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResBagItemCntUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResBagItemCntUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ItemData data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResBagItemCntUpdate)
  return target;
}

size_t ResBagItemCntUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResBagItemCntUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ItemData data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResBagItemCntUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResBagItemCntUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResBagItemCntUpdate::GetClassData() const { return &_class_data_; }

void ResBagItemCntUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResBagItemCntUpdate *>(to)->MergeFrom(
      static_cast<const ResBagItemCntUpdate &>(from));
}


void ResBagItemCntUpdate::MergeFrom(const ResBagItemCntUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResBagItemCntUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResBagItemCntUpdate::CopyFrom(const ResBagItemCntUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResBagItemCntUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResBagItemCntUpdate::IsInitialized() const {
  return true;
}

void ResBagItemCntUpdate::InternalSwap(ResBagItemCntUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResBagItemCntUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[4]);
}

// ===================================================================

class SimpleItemData::_Internal {
 public:
};

SimpleItemData::SimpleItemData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:SimpleItemData)
}
SimpleItemData::SimpleItemData(const SimpleItemData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&count_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:SimpleItemData)
}

inline void SimpleItemData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&count_)) + sizeof(id_));
}

SimpleItemData::~SimpleItemData() {
  // @@protoc_insertion_point(destructor:SimpleItemData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SimpleItemData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SimpleItemData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SimpleItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:SimpleItemData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&count_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SimpleItemData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SimpleItemData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SimpleItemData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_id(), target);
  }

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SimpleItemData)
  return target;
}

size_t SimpleItemData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SimpleItemData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_count());
  }

  // sint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SimpleItemData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SimpleItemData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SimpleItemData::GetClassData() const { return &_class_data_; }

void SimpleItemData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SimpleItemData *>(to)->MergeFrom(
      static_cast<const SimpleItemData &>(from));
}


void SimpleItemData::MergeFrom(const SimpleItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SimpleItemData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleItemData::CopyFrom(const SimpleItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SimpleItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleItemData::IsInitialized() const {
  return true;
}

void SimpleItemData::InternalSwap(SimpleItemData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimpleItemData, id_)
      + sizeof(SimpleItemData::id_)
      - PROTOBUF_FIELD_OFFSET(SimpleItemData, count_)>(
          reinterpret_cast<char*>(&count_),
          reinterpret_cast<char*>(&other->count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SimpleItemData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[5]);
}

// ===================================================================

class ResNoticeItemReward::_Internal {
 public:
};

ResNoticeItemReward::ResNoticeItemReward(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  data_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResNoticeItemReward)
}
ResNoticeItemReward::ResNoticeItemReward(const ResNoticeItemReward& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rdtype_, &from.rdtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&param6_) -
    reinterpret_cast<char*>(&rdtype_)) + sizeof(param6_));
  // @@protoc_insertion_point(copy_constructor:ResNoticeItemReward)
}

inline void ResNoticeItemReward::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&rdtype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&param6_) -
    reinterpret_cast<char*>(&rdtype_)) + sizeof(param6_));
}

ResNoticeItemReward::~ResNoticeItemReward() {
  // @@protoc_insertion_point(destructor:ResNoticeItemReward)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResNoticeItemReward::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResNoticeItemReward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResNoticeItemReward::Clear() {
// @@protoc_insertion_point(message_clear_start:ResNoticeItemReward)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  ::memset(&rdtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param6_) -
      reinterpret_cast<char*>(&rdtype_)) + sizeof(param6_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResNoticeItemReward::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .SimpleItemData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // sint32 rdType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rdtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 param1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 param2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          param2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 param3 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          param3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 param4 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          param4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 param5 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          param5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 param6 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          param6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResNoticeItemReward::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResNoticeItemReward)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SimpleItemData data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // sint32 rdType = 2;
  if (this->_internal_rdtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_rdtype(), target);
  }

  // sint32 param1 = 3;
  if (this->_internal_param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_param1(), target);
  }

  // sint32 param2 = 4;
  if (this->_internal_param2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(4, this->_internal_param2(), target);
  }

  // sint32 param3 = 5;
  if (this->_internal_param3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(5, this->_internal_param3(), target);
  }

  // uint64 param4 = 6;
  if (this->_internal_param4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_param4(), target);
  }

  // uint64 param5 = 7;
  if (this->_internal_param5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_param5(), target);
  }

  // uint64 param6 = 8;
  if (this->_internal_param6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal_param6(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResNoticeItemReward)
  return target;
}

size_t ResNoticeItemReward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResNoticeItemReward)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SimpleItemData data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // sint32 rdType = 2;
  if (this->_internal_rdtype() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_rdtype());
  }

  // sint32 param1 = 3;
  if (this->_internal_param1() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_param1());
  }

  // sint32 param2 = 4;
  if (this->_internal_param2() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_param2());
  }

  // sint32 param3 = 5;
  if (this->_internal_param3() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_param3());
  }

  // uint64 param4 = 6;
  if (this->_internal_param4() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_param4());
  }

  // uint64 param5 = 7;
  if (this->_internal_param5() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_param5());
  }

  // uint64 param6 = 8;
  if (this->_internal_param6() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_param6());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResNoticeItemReward::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResNoticeItemReward::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResNoticeItemReward::GetClassData() const { return &_class_data_; }

void ResNoticeItemReward::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResNoticeItemReward *>(to)->MergeFrom(
      static_cast<const ResNoticeItemReward &>(from));
}


void ResNoticeItemReward::MergeFrom(const ResNoticeItemReward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResNoticeItemReward)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from._internal_rdtype() != 0) {
    _internal_set_rdtype(from._internal_rdtype());
  }
  if (from._internal_param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
  if (from._internal_param2() != 0) {
    _internal_set_param2(from._internal_param2());
  }
  if (from._internal_param3() != 0) {
    _internal_set_param3(from._internal_param3());
  }
  if (from._internal_param4() != 0) {
    _internal_set_param4(from._internal_param4());
  }
  if (from._internal_param5() != 0) {
    _internal_set_param5(from._internal_param5());
  }
  if (from._internal_param6() != 0) {
    _internal_set_param6(from._internal_param6());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResNoticeItemReward::CopyFrom(const ResNoticeItemReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResNoticeItemReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResNoticeItemReward::IsInitialized() const {
  return true;
}

void ResNoticeItemReward::InternalSwap(ResNoticeItemReward* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResNoticeItemReward, param6_)
      + sizeof(ResNoticeItemReward::param6_)
      - PROTOBUF_FIELD_OFFSET(ResNoticeItemReward, rdtype_)>(
          reinterpret_cast<char*>(&rdtype_),
          reinterpret_cast<char*>(&other->rdtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResNoticeItemReward::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Bag_2eproto_getter, &descriptor_table_Bag_2eproto_once,
      file_level_metadata_Bag_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ItemData*
Arena::CreateMaybeMessage< ::ItemData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ItemData >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqBagData*
Arena::CreateMaybeMessage< ::ReqBagData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqBagData >(arena);
}
template<> PROTOBUF_NOINLINE ::ResBagData*
Arena::CreateMaybeMessage< ::ResBagData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResBagData >(arena);
}
template<> PROTOBUF_NOINLINE ::ResServerOptItem*
Arena::CreateMaybeMessage< ::ResServerOptItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResServerOptItem >(arena);
}
template<> PROTOBUF_NOINLINE ::ResBagItemCntUpdate*
Arena::CreateMaybeMessage< ::ResBagItemCntUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResBagItemCntUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::SimpleItemData*
Arena::CreateMaybeMessage< ::SimpleItemData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SimpleItemData >(arena);
}
template<> PROTOBUF_NOINLINE ::ResNoticeItemReward*
Arena::CreateMaybeMessage< ::ResNoticeItemReward >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResNoticeItemReward >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
