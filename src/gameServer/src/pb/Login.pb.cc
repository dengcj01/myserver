// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#include "Login.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR ReqLoginAuth::ReqLoginAuth(
    ::_pbi::ConstantInitialized)
  : account_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , password_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pf_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , serverid_(0)
  , fromserverid_(0){}
struct ReqLoginAuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqLoginAuthDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqLoginAuthDefaultTypeInternal() {}
  union {
    ReqLoginAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqLoginAuthDefaultTypeInternal _ReqLoginAuth_default_instance_;
PROTOBUF_CONSTEXPR ResLoginAuth::ResLoginAuth(
    ::_pbi::ConstantInitialized)
  : code_(0){}
struct ResLoginAuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResLoginAuthDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResLoginAuthDefaultTypeInternal() {}
  union {
    ResLoginAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResLoginAuthDefaultTypeInternal _ResLoginAuth_default_instance_;
PROTOBUF_CONSTEXPR ReqSelectPlayer::ReqSelectPlayer(
    ::_pbi::ConstantInitialized){}
struct ReqSelectPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqSelectPlayerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqSelectPlayerDefaultTypeInternal() {}
  union {
    ReqSelectPlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqSelectPlayerDefaultTypeInternal _ReqSelectPlayer_default_instance_;
PROTOBUF_CONSTEXPR ResSelectPlayer::ResSelectPlayer(
    ::_pbi::ConstantInitialized)
  : pid_(uint64_t{0u})
  , code_(0){}
struct ResSelectPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResSelectPlayerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResSelectPlayerDefaultTypeInternal() {}
  union {
    ResSelectPlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResSelectPlayerDefaultTypeInternal _ResSelectPlayer_default_instance_;
PROTOBUF_CONSTEXPR ReqCreatePlayer::ReqCreatePlayer(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , sex_(0){}
struct ReqCreatePlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqCreatePlayerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqCreatePlayerDefaultTypeInternal() {}
  union {
    ReqCreatePlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqCreatePlayerDefaultTypeInternal _ReqCreatePlayer_default_instance_;
PROTOBUF_CONSTEXPR ResCreatePlayer::ResCreatePlayer(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , sex_(0)
  , code_(0)
  , pid_(uint64_t{0u}){}
struct ResCreatePlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResCreatePlayerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResCreatePlayerDefaultTypeInternal() {}
  union {
    ResCreatePlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResCreatePlayerDefaultTypeInternal _ResCreatePlayer_default_instance_;
PROTOBUF_CONSTEXPR ReqEnterGame::ReqEnterGame(
    ::_pbi::ConstantInitialized)
  : pid_(uint64_t{0u}){}
struct ReqEnterGameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqEnterGameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqEnterGameDefaultTypeInternal() {}
  union {
    ReqEnterGame _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqEnterGameDefaultTypeInternal _ReqEnterGame_default_instance_;
PROTOBUF_CONSTEXPR ResEnterGame::ResEnterGame(
    ::_pbi::ConstantInitialized)
  : code_(0){}
struct ResEnterGameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResEnterGameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResEnterGameDefaultTypeInternal() {}
  union {
    ResEnterGame _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResEnterGameDefaultTypeInternal _ResEnterGame_default_instance_;
PROTOBUF_CONSTEXPR ResServerCloseClient::ResServerCloseClient(
    ::_pbi::ConstantInitialized){}
struct ResServerCloseClientDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResServerCloseClientDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResServerCloseClientDefaultTypeInternal() {}
  union {
    ResServerCloseClient _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResServerCloseClientDefaultTypeInternal _ResServerCloseClient_default_instance_;
static ::_pb::Metadata file_level_metadata_Login_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Login_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Login_2eproto = nullptr;

const uint32_t TableStruct_Login_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqLoginAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqLoginAuth, serverid_),
  PROTOBUF_FIELD_OFFSET(::ReqLoginAuth, account_),
  PROTOBUF_FIELD_OFFSET(::ReqLoginAuth, password_),
  PROTOBUF_FIELD_OFFSET(::ReqLoginAuth, pf_),
  PROTOBUF_FIELD_OFFSET(::ReqLoginAuth, fromserverid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResLoginAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResLoginAuth, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqSelectPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResSelectPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResSelectPlayer, pid_),
  PROTOBUF_FIELD_OFFSET(::ResSelectPlayer, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqCreatePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqCreatePlayer, sex_),
  PROTOBUF_FIELD_OFFSET(::ReqCreatePlayer, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResCreatePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResCreatePlayer, sex_),
  PROTOBUF_FIELD_OFFSET(::ResCreatePlayer, name_),
  PROTOBUF_FIELD_OFFSET(::ResCreatePlayer, pid_),
  PROTOBUF_FIELD_OFFSET(::ResCreatePlayer, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReqEnterGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ReqEnterGame, pid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResEnterGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ResEnterGame, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ResServerCloseClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ReqLoginAuth)},
  { 11, -1, -1, sizeof(::ResLoginAuth)},
  { 18, -1, -1, sizeof(::ReqSelectPlayer)},
  { 24, -1, -1, sizeof(::ResSelectPlayer)},
  { 32, -1, -1, sizeof(::ReqCreatePlayer)},
  { 40, -1, -1, sizeof(::ResCreatePlayer)},
  { 50, -1, -1, sizeof(::ReqEnterGame)},
  { 57, -1, -1, sizeof(::ResEnterGame)},
  { 64, -1, -1, sizeof(::ResServerCloseClient)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_ReqLoginAuth_default_instance_._instance,
  &::_ResLoginAuth_default_instance_._instance,
  &::_ReqSelectPlayer_default_instance_._instance,
  &::_ResSelectPlayer_default_instance_._instance,
  &::_ReqCreatePlayer_default_instance_._instance,
  &::_ResCreatePlayer_default_instance_._instance,
  &::_ReqEnterGame_default_instance_._instance,
  &::_ResEnterGame_default_instance_._instance,
  &::_ResServerCloseClient_default_instance_._instance,
};

const char descriptor_table_protodef_Login_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013Login.proto\"e\n\014ReqLoginAuth\022\020\n\010serverI"
  "d\030\001 \001(\021\022\017\n\007account\030\002 \001(\t\022\020\n\010password\030\003 \001"
  "(\t\022\n\n\002pf\030\004 \001(\t\022\024\n\014fromServerId\030\005 \001(\021\"\034\n\014"
  "ResLoginAuth\022\014\n\004code\030\001 \001(\021\"\021\n\017ReqSelectP"
  "layer\",\n\017ResSelectPlayer\022\013\n\003pid\030\001 \001(\004\022\014\n"
  "\004code\030\002 \001(\021\",\n\017ReqCreatePlayer\022\013\n\003sex\030\001 "
  "\001(\021\022\014\n\004name\030\002 \001(\014\"G\n\017ResCreatePlayer\022\013\n\003"
  "sex\030\001 \001(\021\022\014\n\004name\030\002 \001(\014\022\013\n\003pid\030\003 \001(\004\022\014\n\004"
  "code\030\004 \001(\021\"\033\n\014ReqEnterGame\022\013\n\003pid\030\001 \001(\004\""
  "\034\n\014ResEnterGame\022\014\n\004code\030\001 \001(\021\"\026\n\024ResServ"
  "erCloseClientb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Login_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Login_2eproto = {
    false, false, 421, descriptor_table_protodef_Login_2eproto,
    "Login.proto",
    &descriptor_table_Login_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_Login_2eproto::offsets,
    file_level_metadata_Login_2eproto, file_level_enum_descriptors_Login_2eproto,
    file_level_service_descriptors_Login_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Login_2eproto_getter() {
  return &descriptor_table_Login_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Login_2eproto(&descriptor_table_Login_2eproto);

// ===================================================================

class ReqLoginAuth::_Internal {
 public:
};

ReqLoginAuth::ReqLoginAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqLoginAuth)
}
ReqLoginAuth::ReqLoginAuth(const ReqLoginAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  account_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    account_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_account().empty()) {
    account_.Set(from._internal_account(), 
      GetArenaForAllocation());
  }
  password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    password_.Set(from._internal_password(), 
      GetArenaForAllocation());
  }
  pf_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pf_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pf().empty()) {
    pf_.Set(from._internal_pf(), 
      GetArenaForAllocation());
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&fromserverid_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(fromserverid_));
  // @@protoc_insertion_point(copy_constructor:ReqLoginAuth)
}

inline void ReqLoginAuth::SharedCtor() {
account_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  account_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
password_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  password_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pf_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pf_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&serverid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&fromserverid_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(fromserverid_));
}

ReqLoginAuth::~ReqLoginAuth() {
  // @@protoc_insertion_point(destructor:ReqLoginAuth)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqLoginAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  account_.Destroy();
  password_.Destroy();
  pf_.Destroy();
}

void ReqLoginAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqLoginAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqLoginAuth)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmpty();
  password_.ClearToEmpty();
  pf_.ClearToEmpty();
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fromserverid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(fromserverid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqLoginAuth::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 serverId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          serverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string account = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_account();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ReqLoginAuth.account"));
        } else
          goto handle_unusual;
        continue;
      // string password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ReqLoginAuth.password"));
        } else
          goto handle_unusual;
        continue;
      // string pf = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_pf();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ReqLoginAuth.pf"));
        } else
          goto handle_unusual;
        continue;
      // sint32 fromServerId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          fromserverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqLoginAuth::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqLoginAuth)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 serverId = 1;
  if (this->_internal_serverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_serverid(), target);
  }

  // string account = 2;
  if (!this->_internal_account().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReqLoginAuth.account");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_account(), target);
  }

  // string password = 3;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReqLoginAuth.password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  // string pf = 4;
  if (!this->_internal_pf().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pf().data(), static_cast<int>(this->_internal_pf().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ReqLoginAuth.pf");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_pf(), target);
  }

  // sint32 fromServerId = 5;
  if (this->_internal_fromserverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(5, this->_internal_fromserverid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqLoginAuth)
  return target;
}

size_t ReqLoginAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqLoginAuth)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 2;
  if (!this->_internal_account().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string password = 3;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string pf = 4;
  if (!this->_internal_pf().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pf());
  }

  // sint32 serverId = 1;
  if (this->_internal_serverid() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_serverid());
  }

  // sint32 fromServerId = 5;
  if (this->_internal_fromserverid() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_fromserverid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqLoginAuth::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqLoginAuth::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqLoginAuth::GetClassData() const { return &_class_data_; }

void ReqLoginAuth::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqLoginAuth *>(to)->MergeFrom(
      static_cast<const ReqLoginAuth &>(from));
}


void ReqLoginAuth::MergeFrom(const ReqLoginAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqLoginAuth)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account().empty()) {
    _internal_set_account(from._internal_account());
  }
  if (!from._internal_password().empty()) {
    _internal_set_password(from._internal_password());
  }
  if (!from._internal_pf().empty()) {
    _internal_set_pf(from._internal_pf());
  }
  if (from._internal_serverid() != 0) {
    _internal_set_serverid(from._internal_serverid());
  }
  if (from._internal_fromserverid() != 0) {
    _internal_set_fromserverid(from._internal_fromserverid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqLoginAuth::CopyFrom(const ReqLoginAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqLoginAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqLoginAuth::IsInitialized() const {
  return true;
}

void ReqLoginAuth::InternalSwap(ReqLoginAuth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &account_, lhs_arena,
      &other->account_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &password_, lhs_arena,
      &other->password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pf_, lhs_arena,
      &other->pf_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqLoginAuth, fromserverid_)
      + sizeof(ReqLoginAuth::fromserverid_)
      - PROTOBUF_FIELD_OFFSET(ReqLoginAuth, serverid_)>(
          reinterpret_cast<char*>(&serverid_),
          reinterpret_cast<char*>(&other->serverid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqLoginAuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[0]);
}

// ===================================================================

class ResLoginAuth::_Internal {
 public:
};

ResLoginAuth::ResLoginAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResLoginAuth)
}
ResLoginAuth::ResLoginAuth(const ResLoginAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ResLoginAuth)
}

inline void ResLoginAuth::SharedCtor() {
code_ = 0;
}

ResLoginAuth::~ResLoginAuth() {
  // @@protoc_insertion_point(destructor:ResLoginAuth)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResLoginAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResLoginAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResLoginAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:ResLoginAuth)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResLoginAuth::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResLoginAuth::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResLoginAuth)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResLoginAuth)
  return target;
}

size_t ResLoginAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResLoginAuth)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResLoginAuth::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResLoginAuth::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResLoginAuth::GetClassData() const { return &_class_data_; }

void ResLoginAuth::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResLoginAuth *>(to)->MergeFrom(
      static_cast<const ResLoginAuth &>(from));
}


void ResLoginAuth::MergeFrom(const ResLoginAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResLoginAuth)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResLoginAuth::CopyFrom(const ResLoginAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResLoginAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResLoginAuth::IsInitialized() const {
  return true;
}

void ResLoginAuth::InternalSwap(ResLoginAuth* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResLoginAuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[1]);
}

// ===================================================================

class ReqSelectPlayer::_Internal {
 public:
};

ReqSelectPlayer::ReqSelectPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ReqSelectPlayer)
}
ReqSelectPlayer::ReqSelectPlayer(const ReqSelectPlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ReqSelectPlayer)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqSelectPlayer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqSelectPlayer::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReqSelectPlayer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[2]);
}

// ===================================================================

class ResSelectPlayer::_Internal {
 public:
};

ResSelectPlayer::ResSelectPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResSelectPlayer)
}
ResSelectPlayer::ResSelectPlayer(const ResSelectPlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&pid_, &from.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:ResSelectPlayer)
}

inline void ResSelectPlayer::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(code_));
}

ResSelectPlayer::~ResSelectPlayer() {
  // @@protoc_insertion_point(destructor:ResSelectPlayer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResSelectPlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResSelectPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResSelectPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:ResSelectPlayer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResSelectPlayer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 pid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResSelectPlayer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResSelectPlayer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pid = 1;
  if (this->_internal_pid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_pid(), target);
  }

  // sint32 code = 2;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResSelectPlayer)
  return target;
}

size_t ResSelectPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResSelectPlayer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 pid = 1;
  if (this->_internal_pid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_pid());
  }

  // sint32 code = 2;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResSelectPlayer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResSelectPlayer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResSelectPlayer::GetClassData() const { return &_class_data_; }

void ResSelectPlayer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResSelectPlayer *>(to)->MergeFrom(
      static_cast<const ResSelectPlayer &>(from));
}


void ResSelectPlayer::MergeFrom(const ResSelectPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResSelectPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pid() != 0) {
    _internal_set_pid(from._internal_pid());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResSelectPlayer::CopyFrom(const ResSelectPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResSelectPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResSelectPlayer::IsInitialized() const {
  return true;
}

void ResSelectPlayer::InternalSwap(ResSelectPlayer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResSelectPlayer, code_)
      + sizeof(ResSelectPlayer::code_)
      - PROTOBUF_FIELD_OFFSET(ResSelectPlayer, pid_)>(
          reinterpret_cast<char*>(&pid_),
          reinterpret_cast<char*>(&other->pid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResSelectPlayer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[3]);
}

// ===================================================================

class ReqCreatePlayer::_Internal {
 public:
};

ReqCreatePlayer::ReqCreatePlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqCreatePlayer)
}
ReqCreatePlayer::ReqCreatePlayer(const ReqCreatePlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  sex_ = from.sex_;
  // @@protoc_insertion_point(copy_constructor:ReqCreatePlayer)
}

inline void ReqCreatePlayer::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sex_ = 0;
}

ReqCreatePlayer::~ReqCreatePlayer() {
  // @@protoc_insertion_point(destructor:ReqCreatePlayer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqCreatePlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void ReqCreatePlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqCreatePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqCreatePlayer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  sex_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqCreatePlayer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 sex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          sex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqCreatePlayer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqCreatePlayer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 sex = 1;
  if (this->_internal_sex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_sex(), target);
  }

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqCreatePlayer)
  return target;
}

size_t ReqCreatePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqCreatePlayer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // sint32 sex = 1;
  if (this->_internal_sex() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_sex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqCreatePlayer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqCreatePlayer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqCreatePlayer::GetClassData() const { return &_class_data_; }

void ReqCreatePlayer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqCreatePlayer *>(to)->MergeFrom(
      static_cast<const ReqCreatePlayer &>(from));
}


void ReqCreatePlayer::MergeFrom(const ReqCreatePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqCreatePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_sex() != 0) {
    _internal_set_sex(from._internal_sex());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqCreatePlayer::CopyFrom(const ReqCreatePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqCreatePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCreatePlayer::IsInitialized() const {
  return true;
}

void ReqCreatePlayer::InternalSwap(ReqCreatePlayer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(sex_, other->sex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqCreatePlayer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[4]);
}

// ===================================================================

class ResCreatePlayer::_Internal {
 public:
};

ResCreatePlayer::ResCreatePlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResCreatePlayer)
}
ResCreatePlayer::ResCreatePlayer(const ResCreatePlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&sex_, &from.sex_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&sex_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:ResCreatePlayer)
}

inline void ResCreatePlayer::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&sex_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&sex_)) + sizeof(pid_));
}

ResCreatePlayer::~ResCreatePlayer() {
  // @@protoc_insertion_point(destructor:ResCreatePlayer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResCreatePlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void ResCreatePlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResCreatePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:ResCreatePlayer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  ::memset(&sex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&sex_)) + sizeof(pid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResCreatePlayer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 sex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          sex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 pid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResCreatePlayer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResCreatePlayer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 sex = 1;
  if (this->_internal_sex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_sex(), target);
  }

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint64 pid = 3;
  if (this->_internal_pid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_pid(), target);
  }

  // sint32 code = 4;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(4, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResCreatePlayer)
  return target;
}

size_t ResCreatePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResCreatePlayer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // sint32 sex = 1;
  if (this->_internal_sex() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_sex());
  }

  // sint32 code = 4;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_code());
  }

  // uint64 pid = 3;
  if (this->_internal_pid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_pid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResCreatePlayer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResCreatePlayer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResCreatePlayer::GetClassData() const { return &_class_data_; }

void ResCreatePlayer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResCreatePlayer *>(to)->MergeFrom(
      static_cast<const ResCreatePlayer &>(from));
}


void ResCreatePlayer::MergeFrom(const ResCreatePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResCreatePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_sex() != 0) {
    _internal_set_sex(from._internal_sex());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from._internal_pid() != 0) {
    _internal_set_pid(from._internal_pid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResCreatePlayer::CopyFrom(const ResCreatePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResCreatePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResCreatePlayer::IsInitialized() const {
  return true;
}

void ResCreatePlayer::InternalSwap(ResCreatePlayer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResCreatePlayer, pid_)
      + sizeof(ResCreatePlayer::pid_)
      - PROTOBUF_FIELD_OFFSET(ResCreatePlayer, sex_)>(
          reinterpret_cast<char*>(&sex_),
          reinterpret_cast<char*>(&other->sex_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResCreatePlayer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[5]);
}

// ===================================================================

class ReqEnterGame::_Internal {
 public:
};

ReqEnterGame::ReqEnterGame(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ReqEnterGame)
}
ReqEnterGame::ReqEnterGame(const ReqEnterGame& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pid_ = from.pid_;
  // @@protoc_insertion_point(copy_constructor:ReqEnterGame)
}

inline void ReqEnterGame::SharedCtor() {
pid_ = uint64_t{0u};
}

ReqEnterGame::~ReqEnterGame() {
  // @@protoc_insertion_point(destructor:ReqEnterGame)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqEnterGame::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReqEnterGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReqEnterGame::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqEnterGame)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqEnterGame::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 pid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqEnterGame::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqEnterGame)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pid = 1;
  if (this->_internal_pid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_pid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReqEnterGame)
  return target;
}

size_t ReqEnterGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReqEnterGame)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 pid = 1;
  if (this->_internal_pid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_pid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqEnterGame::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReqEnterGame::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqEnterGame::GetClassData() const { return &_class_data_; }

void ReqEnterGame::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReqEnterGame *>(to)->MergeFrom(
      static_cast<const ReqEnterGame &>(from));
}


void ReqEnterGame::MergeFrom(const ReqEnterGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqEnterGame)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pid() != 0) {
    _internal_set_pid(from._internal_pid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqEnterGame::CopyFrom(const ReqEnterGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqEnterGame::IsInitialized() const {
  return true;
}

void ReqEnterGame::InternalSwap(ReqEnterGame* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(pid_, other->pid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqEnterGame::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[6]);
}

// ===================================================================

class ResEnterGame::_Internal {
 public:
};

ResEnterGame::ResEnterGame(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ResEnterGame)
}
ResEnterGame::ResEnterGame(const ResEnterGame& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ResEnterGame)
}

inline void ResEnterGame::SharedCtor() {
code_ = 0;
}

ResEnterGame::~ResEnterGame() {
  // @@protoc_insertion_point(destructor:ResEnterGame)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResEnterGame::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResEnterGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResEnterGame::Clear() {
// @@protoc_insertion_point(message_clear_start:ResEnterGame)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResEnterGame::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResEnterGame::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResEnterGame)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResEnterGame)
  return target;
}

size_t ResEnterGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResEnterGame)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResEnterGame::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResEnterGame::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResEnterGame::GetClassData() const { return &_class_data_; }

void ResEnterGame::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResEnterGame *>(to)->MergeFrom(
      static_cast<const ResEnterGame &>(from));
}


void ResEnterGame::MergeFrom(const ResEnterGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResEnterGame)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResEnterGame::CopyFrom(const ResEnterGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResEnterGame::IsInitialized() const {
  return true;
}

void ResEnterGame::InternalSwap(ResEnterGame* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResEnterGame::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[7]);
}

// ===================================================================

class ResServerCloseClient::_Internal {
 public:
};

ResServerCloseClient::ResServerCloseClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ResServerCloseClient)
}
ResServerCloseClient::ResServerCloseClient(const ResServerCloseClient& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ResServerCloseClient)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResServerCloseClient::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResServerCloseClient::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResServerCloseClient::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Login_2eproto_getter, &descriptor_table_Login_2eproto_once,
      file_level_metadata_Login_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ReqLoginAuth*
Arena::CreateMaybeMessage< ::ReqLoginAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqLoginAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::ResLoginAuth*
Arena::CreateMaybeMessage< ::ResLoginAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResLoginAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqSelectPlayer*
Arena::CreateMaybeMessage< ::ReqSelectPlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqSelectPlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::ResSelectPlayer*
Arena::CreateMaybeMessage< ::ResSelectPlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResSelectPlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqCreatePlayer*
Arena::CreateMaybeMessage< ::ReqCreatePlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqCreatePlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::ResCreatePlayer*
Arena::CreateMaybeMessage< ::ResCreatePlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResCreatePlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::ReqEnterGame*
Arena::CreateMaybeMessage< ::ReqEnterGame >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReqEnterGame >(arena);
}
template<> PROTOBUF_NOINLINE ::ResEnterGame*
Arena::CreateMaybeMessage< ::ResEnterGame >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResEnterGame >(arena);
}
template<> PROTOBUF_NOINLINE ::ResServerCloseClient*
Arena::CreateMaybeMessage< ::ResServerCloseClient >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ResServerCloseClient >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
